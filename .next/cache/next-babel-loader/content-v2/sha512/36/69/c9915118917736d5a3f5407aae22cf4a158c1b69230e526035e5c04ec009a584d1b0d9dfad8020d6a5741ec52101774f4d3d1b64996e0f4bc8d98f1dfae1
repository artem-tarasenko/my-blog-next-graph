{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\posts\\\\[slug].js\";\nimport { useRouter } from 'next/router';\n\n//import client from '../../client';\nfunction Post(_ref) {\n  var post = _ref.post;\n  console.log(\"POST > \", post);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 11\n  }, this);\n} // #########################################################################################\n// #########################################################################################\n// #########################################################################################\n// #########################################################################################\n\n\n_c = Post;\nexport var __N_SSG = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/posts/[slug].js"],"names":["useRouter","Post","post","console","log","title","content","text"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA;AAEA,SAASC,IAAT,OAAwB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAEtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AACA,sBAAQ,QAAC,KAAD,CAAO,QAAP;AAAA,4BACA;AAAA,gBAAKA,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,gBAAIH,IAAI,CAACI,OAAL,CAAaC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAOD,C,CAED;AACA;AACA;AACA;;;KAfSN,I;;AA0ET,eAAeA,IAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\n//import client from '../../client';\r\n\r\nfunction Post( {post} ) {\r\n\r\n  console.log(\"POST > \", post);\r\n  return  <React.Fragment>\r\n          <h1>{post.title}</h1>\r\n          <hr />\r\n          <p>{post.content.text}</p>\r\n\r\n          </React.Fragment>\r\n\r\n}\r\n\r\n// #########################################################################################\r\n// #########################################################################################\r\n// #########################################################################################\r\n// #########################################################################################\r\n\r\n\r\n\r\n\r\n\r\nexport async function getStaticProps({params}) {\r\n  const client = new ApolloClient({\r\n      uri: process.env.REACT_APP_GRAPH_API,\r\n      cache: new InMemoryCache()\r\n  });\r\n\r\n  console.log(\"PARAMS \", params);\r\n  //destructure response to data obj\r\n  const { data: {posts} } = await client.query({\r\n      query: gql`{ \r\n          posts {\r\n              title\r\n              slug\r\n              content {\r\n                text\r\n              }\r\n            } \r\n      }`\r\n  });\r\n\r\n  const post = posts.map(item => item.slug === params.slug)\r\n\r\n  //console.log(\"Get static props DATA > \", data);\r\n  // console.log(\"Get static props SLUG > \", slug);\r\n  return { props: {post} }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// This function gets called at build time\r\nexport async function getStaticPaths() {\r\n  const client = new ApolloClient({\r\n    uri: process.env.REACT_APP_GRAPH_API,\r\n    cache: new InMemoryCache()\r\n  });\r\n\r\n  const { data: {slugs} } = await client.query({\r\n    query: gql`{posts { slug } }`\r\n  });\r\n\r\n\r\n  //const postsSlugs = postsData.data.posts;\r\n  const paths = slugs.map(item => ({params: {slug: item.slug}}));\r\n\r\n  // console.log(\"POSTS SLUGS VAR > \", postsId);\r\n  // console.log(\"PATHS VAR > \", paths);\r\n\r\n  return { paths, fallback: false }\r\n}\r\n\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}