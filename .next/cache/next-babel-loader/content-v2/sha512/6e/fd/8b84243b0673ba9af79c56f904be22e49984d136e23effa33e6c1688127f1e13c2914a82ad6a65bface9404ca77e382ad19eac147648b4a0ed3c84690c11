{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\index.js\";\nimport React, { useEffect, useState } from \"react\"; //import '../styles/globals.css';\n\nimport Blog from \"../components/Blog.jsx\";\nimport Layout from '../components/Layout.jsx'; // import { request, GraphQLClient, gql  } from 'graphql-request';\n\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\n\nfunction Index(props) {\n  const {\n    posts = []\n  } = props;\n  console.log(\"INITIAL POSTS > \", posts);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this); // return (\n  //   <div>\n  //     <h1>Welcome to a blog!</h1>\n  //     {posts.map(\n  //       ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n  //         slug && (\n  //           <li key={_id}>\n  //             <Link href=\"/posts/[slug]\" as={`/posts/${slug.current}`}>\n  //               <a>{title}</a>\n  //             </Link>{' '}\n  //             ({new Date(_updatedAt).toDateString()})\n  //           </li>\n  //         )\n  //     )}\n  //   </div>\n  // )\n}\n\nconst endpoint = \"https://api-eu-central-1.graphcms.com/v2/ckm5wfx4hhhng01xhe7gfaavz/master\"; // ###############################################################\n// ###############################################################\n// ###############################################################\n// ###############################################################\n// This function gets called at build time\n\nexport async function getStaticProps() {\n  const client = new ApolloClient({\n    uri: endpoint,\n    cache: new InMemoryCache()\n  });\n  const {\n    data\n  } = await client.query({\n    // query: gql`\n    //     query GetLaunches {\n    //     launchesPast(limit: 2) {\n    //         id\n    //         mission_name\n    //         launch_date_local\n    //         launch_site {\n    //         site_name_long\n    //         }\n    //         links {\n    //         article_link\n    //         video_link\n    //         mission_patch\n    //         }\n    //         rocket {\n    //         rocket_name\n    //         }\n    //     }\n    //     }\n    // `\n    // });\n    query: gql`\n    {\n        posts {\n            title\n        }\n    }\n    `\n  });\n  console.log(\"QUERY DATA, \", data);\n  return {\n    props: {\n      posts: data.posts\n    }\n  };\n} // FETCH DATA FROM SEP FUNC\n//   export async function getStaticProps({ preview = false }) {\n//     const posts = (await getAllPostsForHome(preview)) || []\n//     return {\n//       props: { posts, preview },\n//     }\n//   }\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/index.js"],"names":["React","useEffect","useState","Blog","Layout","ApolloClient","InMemoryCache","gql","Index","props","posts","console","log","endpoint","getStaticProps","client","uri","cache","data","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,GAAtC,QAAiD,gBAAjD;;AAGA,SAASC,KAAT,CAAgBC,KAAhB,EAAwB;AAEpB,QAAM;AAAEC,IAAAA,KAAK,GAAG;AAAV,MAAiBD,KAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC;AAGA,sBAAQ,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAAR,CANoB,CAYpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED,MAAMG,QAAQ,GAAG,2EAAjB,C,CAIA;AACA;AAEA;AACA;AAGA;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,IAAIV,YAAJ,CAAiB;AAC5BW,IAAAA,GAAG,EAAEH,QADuB;AAE5BI,IAAAA,KAAK,EAAE,IAAIX,aAAJ;AAFqB,GAAjB,CAAf;AAMA,QAAM;AAAEY,IAAAA;AAAF,MAAW,MAAMH,MAAM,CAACI,KAAP,CAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAA,IAAAA,KAAK,EAAEZ,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AA7BwC,GAAb,CAAvB;AAgCAI,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BM,IAA5B;AAEA,SAAO;AAAET,IAAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAEQ,IAAI,CAACR;AAAb;AAAT,GAAP;AACD,C,CAIH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeF,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n//import '../styles/globals.css';\r\n\r\nimport Blog from \"../components/Blog.jsx\";\r\nimport Layout from '../components/Layout.jsx';\r\n// import { request, GraphQLClient, gql  } from 'graphql-request';\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\n\r\n\r\nfunction Index( props ) {\r\n\r\n    const { posts = [] } = props;\r\n    console.log(\"INITIAL POSTS > \", posts);\r\n\r\n    \r\n    return  <React.Fragment>\r\n                <Layout >\r\n                    {/* {props.posts.length > 1 ? <Blog source={posts} test={\"testing string\"} /> : <p>Loading...</p>} */}\r\n                </Layout>\r\n            </React.Fragment>\r\n\r\n    // return (\r\n    //   <div>\r\n    //     <h1>Welcome to a blog!</h1>\r\n    //     {posts.map(\r\n    //       ({ _id, title = '', slug = '', _updatedAt = '' }) =>\r\n    //         slug && (\r\n    //           <li key={_id}>\r\n    //             <Link href=\"/posts/[slug]\" as={`/posts/${slug.current}`}>\r\n    //               <a>{title}</a>\r\n    //             </Link>{' '}\r\n    //             ({new Date(_updatedAt).toDateString()})\r\n    //           </li>\r\n    //         )\r\n    //     )}\r\n    //   </div>\r\n    // )\r\n}\r\n\r\nconst endpoint = \"https://api-eu-central-1.graphcms.com/v2/ckm5wfx4hhhng01xhe7gfaavz/master\";\r\n\r\n\r\n\r\n// ###############################################################\r\n// ###############################################################\r\n\r\n// ###############################################################\r\n// ###############################################################\r\n\r\n\r\n// This function gets called at build time\r\nexport async function getStaticProps() {\r\n    const client = new ApolloClient({\r\n        uri: endpoint,\r\n        cache: new InMemoryCache()\r\n    });\r\n\r\n\r\n    const { data } = await client.query({\r\n    // query: gql`\r\n    //     query GetLaunches {\r\n    //     launchesPast(limit: 2) {\r\n    //         id\r\n    //         mission_name\r\n    //         launch_date_local\r\n    //         launch_site {\r\n    //         site_name_long\r\n    //         }\r\n    //         links {\r\n    //         article_link\r\n    //         video_link\r\n    //         mission_patch\r\n    //         }\r\n    //         rocket {\r\n    //         rocket_name\r\n    //         }\r\n    //     }\r\n    //     }\r\n    // `\r\n    // });\r\n\r\n    query: gql`\r\n    {\r\n        posts {\r\n            title\r\n        }\r\n    }\r\n    `\r\n});\r\n\r\n    console.log(\"QUERY DATA, \", data); \r\n    \r\n    return { props: {posts: data.posts} }\r\n  }\r\n \r\n\r\n\r\n// FETCH DATA FROM SEP FUNC\r\n//   export async function getStaticProps({ preview = false }) {\r\n//     const posts = (await getAllPostsForHome(preview)) || []\r\n//     return {\r\n//       props: { posts, preview },\r\n//     }\r\n//   }\r\n\r\nexport default Index;\r\n\r\n"]},"metadata":{},"sourceType":"module"}