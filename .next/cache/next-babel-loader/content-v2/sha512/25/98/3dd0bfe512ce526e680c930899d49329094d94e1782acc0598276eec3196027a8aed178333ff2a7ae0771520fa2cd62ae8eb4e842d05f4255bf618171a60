{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\index.js\";\nimport React, { useEffect, useState } from \"react\"; //import '../styles/globals.css';\n\nimport Blog from \"../components/Blog.jsx\";\nimport Layout from '../components/Layout.jsx'; // import { request, GraphQLClient, gql  } from 'graphql-request';\n\nfunction Index(props) {\n  var _props$posts = props.posts,\n      posts = _props$posts === void 0 ? [] : _props$posts;\n  console.log(\"INITIAL POSTS > \", posts); //console.log(\"INIT LAUNCHES > \", launches);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this); // return (\n  //   <div>\n  //     <h1>Welcome to a blog!</h1>\n  //     {posts.map(\n  //       ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n  //         slug && (\n  //           <li key={_id}>\n  //             <Link href=\"/posts/[slug]\" as={`/posts/${slug.current}`}>\n  //               <a>{title}</a>\n  //             </Link>{' '}\n  //             ({new Date(_updatedAt).toDateString()})\n  //           </li>\n  //         )\n  //     )}\n  //   </div>\n  // )\n}\n\n_c = Index;\nvar endpoint = \"https://api-eu-central-1.graphcms.com/v2/ckm5wfx4hhhng01xhe7gfaavz/master\"; // ###############################################################\n// ###############################################################\n// Run GraphQL queries/mutations using a static function\n// request(endpoint, query, variables).then((data) => console.log(data))\n// ... or create a GraphQL client instance to send requests\n// const client = new GraphQLClient(endpoint, { headers: {} })\n// client.request(query, variables).then((data) => console.log(data))\n// ###############################################################\n// ###############################################################\n// This function gets called at build time\n\n// FETCH DATA FROM SEP FUNC\n//   export async function getStaticProps({ preview = false }) {\n//     const posts = (await getAllPostsForHome(preview)) || []\n//     return {\n//       props: { posts, preview },\n//     }\n//   }\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/index.js"],"names":["React","useEffect","useState","Blog","Layout","Index","props","posts","console","log","endpoint"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AAIA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,qBAEKA,KAFL,CAEVC,KAFU;AAAA,MAEVA,KAFU,6BAEF,EAFE;AAGlBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,KAAhC,EAHkB,CAIlB;;AAEA,sBAAQ,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAAR,CANkB,CAYlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;KA5BQF,K;AA8BT,IAAMK,QAAQ,GAAG,2EAAjB,C,CAIA;AACA;AAIA;AACI;AAEJ;AACI;AACA;AAGJ;AACA;AAGA;;AAiFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeL,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n//import '../styles/globals.css';\r\n\r\nimport Blog from \"../components/Blog.jsx\";\r\nimport Layout from '../components/Layout.jsx';\r\n// import { request, GraphQLClient, gql  } from 'graphql-request';\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\n\r\n\r\nfunction Index(props) {\r\n\r\n    const { posts = [] } = props;\r\n    console.log(\"INITIAL POSTS > \", posts);\r\n    //console.log(\"INIT LAUNCHES > \", launches);\r\n    \r\n    return  <React.Fragment>\r\n                <Layout >\r\n                    {/* {props.posts.length > 1 ? <Blog source={posts} test={\"testing string\"} /> : <p>Loading...</p>} */}\r\n                </Layout>\r\n            </React.Fragment>\r\n\r\n    // return (\r\n    //   <div>\r\n    //     <h1>Welcome to a blog!</h1>\r\n    //     {posts.map(\r\n    //       ({ _id, title = '', slug = '', _updatedAt = '' }) =>\r\n    //         slug && (\r\n    //           <li key={_id}>\r\n    //             <Link href=\"/posts/[slug]\" as={`/posts/${slug.current}`}>\r\n    //               <a>{title}</a>\r\n    //             </Link>{' '}\r\n    //             ({new Date(_updatedAt).toDateString()})\r\n    //           </li>\r\n    //         )\r\n    //     )}\r\n    //   </div>\r\n    // )\r\n}\r\n\r\nconst endpoint = \"https://api-eu-central-1.graphcms.com/v2/ckm5wfx4hhhng01xhe7gfaavz/master\";\r\n\r\n\r\n\r\n// ###############################################################\r\n// ###############################################################\r\n\r\n\r\n\r\n// Run GraphQL queries/mutations using a static function\r\n    // request(endpoint, query, variables).then((data) => console.log(data))\r\n\r\n// ... or create a GraphQL client instance to send requests\r\n    // const client = new GraphQLClient(endpoint, { headers: {} })\r\n    // client.request(query, variables).then((data) => console.log(data))\r\n\r\n\r\n// ###############################################################\r\n// ###############################################################\r\n\r\n\r\n// This function gets called at build time\r\nexport async function getStaticProps() {\r\n    // Call an external API endpoint to get posts\r\n    // const res = await fetch('https://.../posts')\r\n    // const posts = await res.json()\r\n\r\n    // const posts = request(endpoint, query).then((data) => data);\r\n\r\n    // const temp = request(endpoint, query).then(data => data).catch(console.error);\r\n    // console.log(\"TEMP\", temp);\r\n\r\n    // const client = new GraphQLClient(endpoint, {\r\n    //     credentials: 'include',\r\n    //     mode: 'cors',\r\n    //   })\r\n    // client.request(query).then((data) => console.log(data));\r\n\r\n\r\n\r\n//     const fetchData = async () => {\r\n//         const response = await fetch(\"/master\", config);\r\n//         const data = response.json();\r\n//         console.log(\"DATA > \", data);\r\n//    }\r\n\r\n    //console.log(\"FETCHING DATA GQL: \", posts);\r\n  \r\n    // By returning { props: { posts } }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n    // return {\r\n    //   props: {\r\n    //     posts,\r\n    //   },\r\n    // }\r\n\r\n    const client = new ApolloClient({\r\n        uri: 'https://api.spacex.land/graphql/',\r\n        //uri: 'https://api-eu-central-1.graphcms.com/v2/ckm5wfx4hhhng01xhe7gfaavz/master',\r\n        cache: new InMemoryCache()\r\n      });\r\n\r\n\r\n    const { data } = await client.query({\r\n    query: gql`\r\n        query GetLaunches {\r\n        launchesPast(limit: 2) {\r\n            id\r\n            mission_name\r\n            launch_date_local\r\n            launch_site {\r\n            site_name_long\r\n            }\r\n            links {\r\n            article_link\r\n            video_link\r\n            mission_patch\r\n            }\r\n            rocket {\r\n            rocket_name\r\n            }\r\n        }\r\n        }\r\n    `\r\n    });\r\n\r\n    // query: gql`\r\n    // {\r\n    //     posts {\r\n    //         title\r\n    //     }\r\n    // }\r\n    // `\r\n// });\r\n\r\n    console.log(\"QUERY DATA, \", data); \r\n    \r\n    return { props: {posts: data.posts} }\r\n  }\r\n \r\n\r\n\r\n// FETCH DATA FROM SEP FUNC\r\n//   export async function getStaticProps({ preview = false }) {\r\n//     const posts = (await getAllPostsForHome(preview)) || []\r\n//     return {\r\n//       props: { posts, preview },\r\n//     }\r\n//   }\r\n\r\nexport default Index;\r\n\r\n"]},"metadata":{},"sourceType":"module"}