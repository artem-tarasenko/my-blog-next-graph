{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\snippets\\\\index.js\";\nimport React from \"react\";\nimport Layout from '../../components/Layout.jsx';\nimport Snippets from \"../../components/Snippets.jsx\"; // ###############################################################\n// ###############################################################\n\n// ###############################################################\n// ###############################################################\nfunction Index(props) {\n  //get props from getStaticProps and destructure it to new object\n  //recieveing posts prop = [\"array from response\"], and default empty []\n  var _props$snippets = props.snippets,\n      snippets = _props$snippets === void 0 ? [] : _props$snippets; //console.log(\"SNIPPETS RENDER DATA > \", snippets);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: snippets.length >= 1 ? /*#__PURE__*/_jsxDEV(Snippets, {\n        source: snippets,\n        test: \"testing string\",\n        category: \"snippets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 124\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n}\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/snippets/index.js"],"names":["React","Layout","Snippets","Index","props","snippets","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,QAAP,MAAqB,+BAArB,C,CAGA;AACA;;AA4BA;AACA;AACA,SAASC,KAAT,CAAgBC,KAAhB,EAAwB;AACpB;AACA;AAFoB,wBAGMA,KAHN,CAGZC,QAHY;AAAA,MAGZA,QAHY,gCAGD,EAHC,oBAIpB;;AAEA,sBAAQ,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI,QAAC,MAAD;AAAA,gBACKA,QAAQ,CAACC,MAAT,IAAmB,CAAnB,gBAAuB,QAAC,QAAD;AAAU,QAAA,MAAM,EAAED,QAAlB;AAA4B,QAAA,IAAI,EAAE,gBAAlC;AAAoD,QAAA,QAAQ,EAAE;AAA9D;AAAA;AAAA;AAAA;AAAA,cAAvB,gBAAsG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD3G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAAR;AAKH;;KAXQF,K;;AAaT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\n\r\nimport Layout from '../../components/Layout.jsx';\r\nimport Snippets from \"../../components/Snippets.jsx\";\r\n\r\n\r\n// ###############################################################\r\n// ###############################################################\r\nconst client = new ApolloClient({\r\n    uri: process.env.REACT_APP_GRAPH_API,\r\n    cache: new InMemoryCache()\r\n});\r\n\r\n// ###############################################################\r\n// ###############################################################\r\n// This function gets called at build time\r\nexport async function getStaticProps() {\r\n    //destructure response to data obj\r\n    const { data: {snippets} } = await client.query({\r\n        query: gql`{ \r\n            snippets {\r\n                title\r\n                slug\r\n                tags\r\n                createdAt\r\n              } \r\n        }`\r\n    });\r\n\r\n    return { props: {snippets} };\r\n  }\r\n\r\n\r\n\r\n\r\n// ###############################################################\r\n// ###############################################################\r\nfunction Index( props ) {\r\n    //get props from getStaticProps and destructure it to new object\r\n    //recieveing posts prop = [\"array from response\"], and default empty []\r\n    const { snippets = [] } = props;\r\n    //console.log(\"SNIPPETS RENDER DATA > \", snippets);\r\n    \r\n    return  <React.Fragment>\r\n                <Layout >\r\n                    {snippets.length >= 1 ? <Snippets source={snippets} test={\"testing string\"} category={\"snippets\"} /> : <p>Loading...</p>}\r\n                </Layout>\r\n            </React.Fragment>\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}