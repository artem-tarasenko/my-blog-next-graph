{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\snippets\\\\[slug].js\";\nimport React from \"react\";\n\n// ##################################################\n// getStaticProps({params}) {\n//     //destructure response to data obj, response data from apollo will be in data prop.\n//     //so destructuring should be for 2 layers\n//     //GraphQL query format - ( { query: *query*, variables: {} } ). Response will be if a form of - {data: {posts: [{post}, {post}]}}\n//     //but with only 1 item in the array - {data: {posts: [{post}]}}, so to get the final object 3 layers must be destructured..\n//     const graphQuery = gql`\n//       query GetSinglePostQuery($slug: String) { \n//         posts(where: {slug: $slug}) {\n//           slug\n//           title\n//           date\n//           excerpt\n//           content {\n//             text\n//             raw\n//             markdown\n//             html\n//           }\n//             coverImage {\n//               url\n//             }\n//         }\n//       } \n//     `;\n//     const { data: { posts: [post] } } = await client.query(\n//       {query: graphQuery, variables: {slug: params.slug}}\n//     );\n//     return { props: {post} }\n//   }\n// #########################################################################################\n// #########################################################################################\n// This function gets called at build time\n// export async function getStaticPaths() {\n//   const { data: {posts} } = await client.query(\n//     {query: gql`{posts { slug } }`}\n//   );\n//   const paths = posts.map(item => ({params: {slug: item.slug}}));\n//   return { paths, fallback: false }\n// }\n// #########################################################################################\n// #########################################################################################\nfunction Post(_ref) {\n  var _this = this;\n\n  var snippet = _ref.snippet;\n  console.log(snippet);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-column mb-6 flex-row-reverse\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-items mt-5\",\n        children: props.source.map(function (item, index) {\n          return /*#__PURE__*/_jsxDEV(BlogItem, {\n            source: item,\n            category: props.category\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 56\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar flex-shrink-0 text-right mr-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"category uppercase font-thin text-gray-400 text-2xl text-left \",\n          children: \"SNIPPETS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"snippets pt-4 text-lg text-gray-600\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sidemenu here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Post;\nexport var __N_SSG = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/snippets/[slug].js"],"names":["React","Post","snippet","console","log","props","source","map","item","index","category"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIF;AACA;AACA,SAASC,IAAT,OAA2B;AAAA;;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA,8BAGI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACKG,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAACC,IAAD,EAAOC,KAAP;AAAA,8BAAiB,QAAC,QAAD;AAAsB,YAAA,MAAM,EAAED,IAA9B;AAAoC,YAAA,QAAQ,EAAEH,KAAK,CAACK;AAApD,aAAeD,KAAf;AAAA;AAAA;AAAA;AAAA,mBAAjB;AAAA,SAAjB;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,gEAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,qCAAd;AAAA,iCAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;KAnCQR,I;;AAqCT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\n\r\n\r\n\r\n// #########################################################################################\r\n// #########################################################################################\r\nconst client = new ApolloClient({\r\n  uri: process.env.REACT_APP_GRAPH_API,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\n\r\n// #########################################################################################\r\n// #########################################################################################\r\n// This function gets called at build time\r\nexport async function getStaticPaths() {\r\n    const { data: {snippets} } = await client.query(\r\n      {query: gql`{snippets { slug } }`}\r\n    );\r\n  \r\n    const paths = snippets.map(item => ({params: {slug: item.slug}}));\r\n    return { paths, fallback: false }\r\n  }\r\n\r\n// #########################################################################################\r\n// #########################################################################################\r\nexport async function getStaticProps( {params} ) {\r\n  //destructure response to data obj, response data from apollo will be in data prop.\r\n  //so destructuring should be for 2 layers\r\n  //GraphQL query format - ( { query: *query*, variables: {} } ). Response will be if a form of - {data: {posts: [{post}, {post}]}}\r\n  //but with only 1 item in the array - {data: {posts: [{post}]}}, so to get the final object 3 layers must be destructured..\r\n  const graphQuery = gql`\r\n    query GetSinglePostQuery($slug: String) { \r\n        snippets(where: {slug: $slug}) {\r\n            title\r\n            slug\r\n            tags\r\n            content{\r\n              html\r\n            }\r\n            repo\r\n            example\r\n        }\r\n    } \r\n  `;\r\n \r\n  const { data: { snippets: [snippet] } } = await client.query(\r\n    {query: graphQuery, variables: {slug: params.slug}}\r\n  );\r\n\r\n  return { props: {snippet} }\r\n}\r\n\r\n\r\n// ##################################################\r\n// getStaticProps({params}) {\r\n//     //destructure response to data obj, response data from apollo will be in data prop.\r\n//     //so destructuring should be for 2 layers\r\n//     //GraphQL query format - ( { query: *query*, variables: {} } ). Response will be if a form of - {data: {posts: [{post}, {post}]}}\r\n//     //but with only 1 item in the array - {data: {posts: [{post}]}}, so to get the final object 3 layers must be destructured..\r\n//     const graphQuery = gql`\r\n//       query GetSinglePostQuery($slug: String) { \r\n//         posts(where: {slug: $slug}) {\r\n//           slug\r\n//           title\r\n//           date\r\n//           excerpt\r\n//           content {\r\n//             text\r\n//             raw\r\n//             markdown\r\n//             html\r\n//           }\r\n//             coverImage {\r\n//               url\r\n//             }\r\n//         }\r\n//       } \r\n//     `;\r\n   \r\n//     const { data: { posts: [post] } } = await client.query(\r\n//       {query: graphQuery, variables: {slug: params.slug}}\r\n//     );\r\n  \r\n//     return { props: {post} }\r\n//   }\r\n  \r\n  // #########################################################################################\r\n  // #########################################################################################\r\n  // This function gets called at build time\r\n  // export async function getStaticPaths() {\r\n  //   const { data: {posts} } = await client.query(\r\n  //     {query: gql`{posts { slug } }`}\r\n  //   );\r\n  \r\n  //   const paths = posts.map(item => ({params: {slug: item.slug}}));\r\n  //   return { paths, fallback: false }\r\n  // }\r\n\r\n\r\n\r\n// #########################################################################################\r\n// #########################################################################################\r\nfunction Post( {snippet} ) {\r\n    console.log(snippet);\r\n\r\n    return  (\r\n        <React.Fragment>\r\n            <div className=\"flex flex-column mb-6 flex-row-reverse\">\r\n\r\n                {/* MAIN ARTICLE */}\r\n                <div className=\"blog-items mt-5\">\r\n                    {props.source.map((item, index) => <BlogItem key={index} source={item} category={props.category} />)}\r\n                </div>\r\n\r\n\r\n                {/* SIDE MENU */}\r\n                <div className=\"sidebar flex-shrink-0 text-right mr-8\">\r\n                    <p className=\"category uppercase font-thin text-gray-400 text-2xl text-left \">SNIPPETS</p>\r\n                    <ul className=\"snippets pt-4 text-lg text-gray-600\">\r\n                        {/* {\r\n                            props.source.map((item, index) => <> \r\n                                <li className=\"snippet-link text-base text-left pb-3 border-b-2 mb-3\" key={index}>\r\n                                    <a onClick={showShippet}>{item.title}</a>\r\n                                    <span className=\"snippet-tags text-xs uppercase flex flex-row\" >\r\n                                        {item.tags.map( (tag,index) => \r\n                                            <p className=\"snippet-tag pt-2\" key={index}>{tag}</p>\r\n                                        )}\r\n                                    </span>\r\n                                </li>\r\n                            </>)\r\n                        } */}\r\n                        <p>Sidemenu here</p>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}