{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\snippets\\\\index.js\",\n    _s = $RefreshSig$(),\n    _this2 = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport Layout from '../../components/Layout.jsx'; //! REMOVE THIS LINE LATER\n\nprocess.env['NODE_TLS_REJECT_UNAUTHORIZED'] = 0; // ###############################################################\n// ###############################################################\n\nvar ACTIONS = {\n  ADD_FILTER: 'add',\n  REMOVE_FILTER: 'remove',\n  TEST: 'test'\n};\n\nfunction reducer(content, action) {\n  var initState = content.allSnippets; //all 8 items\n  // console.log(\"-- Reducer, CONTENT INIT --\", initState)\n\n  switch (action.type) {\n    case ACTIONS.ADD_FILTER:\n      {\n        console.log(\"-- Reducer, ADD --\");\n        var updatedFilter = content.filter.map(function (item) {\n          return item.tag === action.payload.tag ? _objectSpread(_objectSpread({}, item), {}, {\n            isSelected: true\n          }) : _objectSpread({}, item);\n        }); // const updatedSnippets = filterSnippets();\n\n        return _objectSpread(_objectSpread({}, content), {}, {\n          filter: updatedFilter\n        });\n      }\n\n    case ACTIONS.REMOVE_FILTER:\n      {\n        console.log(\"-- Reducer, REMOVE --\");\n\n        var _updatedFilter = content.filter.map(function (item) {\n          return item.tag === action.payload.tag ? _objectSpread(_objectSpread({}, item), {}, {\n            isSelected: false\n          }) : _objectSpread({}, item);\n        }); // const updatedSnippets = filterSnippets();\n\n\n        return _objectSpread(_objectSpread({}, content), {}, {\n          filter: _updatedFilter\n        });\n      }\n    // case ACTIONS.TEST: {\n    //     const temp = filterSnippets();\n    //     return {...content, snippets: temp}\n    // }\n  }\n\n  function filterSnippets() {\n    var activeTags = content.filter.reduce(function (arr, item) {\n      return item.isSelected ? [].concat(_toConsumableArray(arr), [item.tag]) : arr;\n    }, []);\n    var newArr = content.snippets.reduce(function (arr, snippet) {\n      activeTags.forEach(function (tag) {\n        if (snippet.tags.includes(tag) && !arr.includes(function (item) {\n          return item.title === snippet.title;\n        })) {\n          arr.push(snippet);\n        }\n      });\n      return arr;\n    }, []);\n    console.group(\"-- Reducer, TEST --\");\n    console.log(\"-- Filter tags\", activeTags);\n    console.log(\"-- Filter snippets\", newArr);\n    console.groupEnd();\n    return newArr;\n  } // console.log(\"reducer state\", content);\n  // console.log(\"reducer action\", action);\n  // console.log(\"reducer Filter result: \", filter.some( item => item.isActive))\n  // let isFirstFilter = true;\n  // function testFilters() {\n  // content.filter.forEach(tag => {\n  //     if(!tag.isActive) {\n  //         isFirstFilter = false;\n  //     }\n  // })\n  //     filter.some( item => item.isActive)\n  // }\n\n\n  function getSnippetsTags(array) {// let tagsArray = [] //just tags\n    // array.forEach(snippet => snippet.tags.forEach(tag => !tagsArray.includes(tag) && tagsArray.push(tag)));\n    // const disabledFilter = content.filter.map( item => ({...item, isActive: false}) )\n    // const updatedFilter = disabledFilter.map( item => {\n    //     if(tagsArray.includes(item.tag)) {\n    //         return {...item, isActive: true};\n    //     } else {\n    //         return item;\n    //     }\n    // })\n    // console.group('Reducer - get snippets tags');\n    // console.log(\"Initial array: \", array);\n    // console.log(\"Tags filtered \", tagsArray);\n    // console.log(\"Disabled array: \", disabledFilter);\n    // console.log(\"Updated array: \", updatedFilter);\n    // console.groupEnd();\n    // // let newArr = []; //tag objets\n    // // tagsArray.forEach(item => newArr.push({tag: item, isActive: true, isSelected: false}));\n    // return updatedFilter;\n  } //###1st test- Adding or removing filter\n  // if(!action.button.classList.contains(\"selected\")) { //no class - ADDING\n  //     //###2 test 1st lvl or 2+\n  //     // testFilters();\n  //     // action.button.classList.add(\"selected\");\n  //     // if(isFirstFilter) {\n  //     //     //filter snippets to a [tag] - newSnippets-1 (could be not new array but resulting after filtering for selected)\n  //     //     console.log(\"Reducer - value:\", action.button.value);\n  //     //     const newSnippets = content.snippets.filter(item => item.tags.includes(action.button.value));\n  //     //     console.log(\"Reducer - FILTERING Snippets result:\", newSnippets);\n  //     //     //get all tags from newSnippets-1 and update TAGS \n  //     //     let newFilter = getSnippetsTags(newSnippets);\n  //     //         // res => half tags active, 1 selected\n  //     //     console.log(\"Reducer result test: \", {...content, snippets: newSnippets});\n  //     //     return {...content, snippets: newSnippets, filter: newFilter};\n  //     // } else {\n  //     //     //set target tag isSelected\n  //     //     const newSnippets = content.snippets.filter   .filter(item => item.tags.includes(action.button.value));\n  //     //     // filter newSnippets-1 (or just snippets) to [TAG1, TAG2] with func\n  //     //     // (could be not new array but resulting after filtering for selected)\n  //     //     // get all tags from newSnippets (could be just 1 snippet already) and Update tags\n  //     //         // res => 2 selecetd tags and a few active\n  //     // }\n  // } else {// with class - REMOVING\n  // //2 test 1st lvl or 2+\n  //     // if TAGS(item has item.isSelected = 1) - NO - them 1st\n  //         //get default snippets to render\n  //         //reset TAGS - all to isActive and notSelected\n  //         //res => all to defaults\n  //     // if TAGS(item has item.isSelected 2+ ) - them 2nd+\n  //         //set target tag isSelected=false - \n  //         //update tags array\n  //         //filter snippets with new TAGS array by selected\n  //         //update TAGS from snippets and set needed to isActive\n  //         //res => TAGS with -1 selected, half active\n  // }\n\n} // ###############################################################npm\n// ###############################################################\n//! AllTags \\ allSnippets - probably not needed...\n\n\nfunction Index(_ref) {\n  _s();\n\n  var _this = this;\n\n  var snippets = _ref.snippets,\n      filter = _ref.filter,\n      allTags = _ref.allTags,\n      defaultFilter = _ref.defaultFilter;\n\n  var _useReducer = useReducer(reducer, {\n    snippets: snippets,\n    filter: filter,\n    allTags: allTags,\n    defaultFilter: defaultFilter,\n    allSnippets: _toConsumableArray(snippets)\n  }),\n      content = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  console.group('STATE');\n  console.log(\"Snippets count: \".concat(content.snippets.length));\n  console.table(content.filter);\n  console.log(\"testing filter: \", content.filter.includes(function (item) {\n    return item.isSelected;\n  }));\n  console.log(\"Snippets\", content.snippets);\n  console.log(\"Check func? \", checkSnippetTags(content.snippets[0]));\n  console.groupEnd();\n\n  function handleFiltering(e) {\n    if (e.target.classList.contains(\"selected\")) {\n      console.log(\"Disabling filter..\");\n      dispatch({\n        type: ACTIONS.REMOVE_FILTER,\n        payload: {\n          tag: e.target.value\n        }\n      });\n      return;\n    } else {\n      console.log(\"Adding new filter\");\n      dispatch({\n        type: ACTIONS.ADD_FILTER,\n        payload: {\n          tag: e.target.value\n        }\n      });\n      return;\n    }\n\n    ;\n  }\n\n  function checkSnippetTags(snippet) {\n    var tags = content.filter.filter(function (item) {\n      return item.isSelected;\n    });\n    var temp = tags.forEach(function (tag) {\n      if (snippet.tags.includes(tag)) {\n        return snippet;\n      } else {\n        return \"no\";\n      }\n    });\n    return temp;\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-column mb-6 flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-64\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Nay whatever way delicate passed of avoid might sing whatever all window concealed. Dissuade whole many age mistress late sentiments held doubt scarcely against invitation answer enable. Visited engage steepest shall beyond subject civilly performed concluded offence farther.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tags-filter flex flex-row mt-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"tag px-2 py-1 border mr-2\",\n                onClick: function onClick() {\n                  return dispatch({\n                    type: ACTIONS.TEST\n                  });\n                },\n                children: \"TEST\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), content.filter && content.filter.map(function (filter, index) {\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"tag px-2 py-1 border mr-2 \".concat(filter.isSelected ? 'selected' : ''),\n                  disabled: !filter.isActive,\n                  onClick: handleFiltering,\n                  value: filter.tag,\n                  children: filter.tag\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 94\n                }, _this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-8 flex flex-row flex-wrap items-stretch\",\n            children: content.snippets && content.snippets.map(function (snippet, index) {\n              if (!content.filter.includes(function (item) {\n                return item.isSelected;\n              })) {\n                return /*#__PURE__*/_jsxDEV(Snippet, {\n                  snippet: snippet,\n                  tags: snippet.tags\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 48\n                }, _this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"TEST\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 48\n                }, _this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Index, \"AySTO3hrFnb8k/t2+qxelkHXsE4=\");\n\n_c = Index;\n\nvar Snippet = function Snippet(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 flex-shring-0 w-1/4 flex\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-200 p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pb-2 text-lg leading-5\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"snippets/\".concat(props.snippet.slug),\n            children: props.snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 56\n          }, _this2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }, _this2), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm leading-4\",\n          children: props.snippet.excerpt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }, _this2), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"snippet-tags flex flex-row pt-2 flex-wrap\",\n          children: props.tags.map(function (tag, index) {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"snippet-tag text-sm flex-shrink-0\",\n              children: tag\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 53\n            }, _this2);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }, _this2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, _this2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, _this2)\n  }, void 0, false);\n};\n\n_c2 = Snippet;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Snippet\");","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/snippets/index.js"],"names":["React","useEffect","useReducer","useState","Layout","process","env","ACTIONS","ADD_FILTER","REMOVE_FILTER","TEST","reducer","content","action","initState","allSnippets","type","console","log","updatedFilter","filter","map","item","tag","payload","isSelected","filterSnippets","activeTags","reduce","arr","newArr","snippets","snippet","forEach","tags","includes","title","push","group","groupEnd","getSnippetsTags","array","Index","allTags","defaultFilter","dispatch","length","table","checkSnippetTags","handleFiltering","e","target","classList","contains","value","temp","index","isActive","Snippet","props","slug","excerpt"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\nimport Layout from '../../components/Layout.jsx';\r\n\r\n\r\n//! REMOVE THIS LINE LATER\r\nprocess.env['NODE_TLS_REJECT_UNAUTHORIZED'] = 0;\r\n\r\n// ###############################################################\r\n// ###############################################################\r\nconst client = new ApolloClient({\r\n    uri: process.env.REACT_APP_GRAPH_API,\r\n    cache: new InMemoryCache()\r\n});\r\n\r\n// ###############################################################\r\n// ###############################################################\r\n// This function gets called at build time\r\nexport async function getStaticProps() {\r\n    //destructure response to data obj\r\n    const { data: {snippets} } = await client.query({\r\n        query: gql`{ \r\n            snippets {\r\n                title\r\n                slug\r\n                tags\r\n                excerpt\r\n                createdAt\r\n              } \r\n        }`\r\n    });\r\n\r\n    //collecting all possible tags for snippets to pass them as default value\r\n    let tagsArray = []\r\n    snippets.forEach(snippet => snippet.tags.forEach(tag => !tagsArray.includes(tag) && tagsArray.push(tag)));\r\n\r\n    let newArr = [];\r\n    tagsArray.forEach(item => newArr.push({tag: item, isActive: true, isSelected: false}));\r\n    const initialContent = { snippets: snippets, filter: newArr, allTags: tagsArray, defaultFilter: newArr }\r\n\r\n    return { props: initialContent};\r\n  }\r\n\r\n\r\nconst ACTIONS = {\r\n    ADD_FILTER: 'add',\r\n    REMOVE_FILTER: 'remove',\r\n    TEST: 'test'\r\n  }\r\n\r\nfunction reducer(content, action) {\r\n    const initState = content.allSnippets; //all 8 items\r\n    // console.log(\"-- Reducer, CONTENT INIT --\", initState)\r\n    \r\n    switch(action.type) {\r\n        case ACTIONS.ADD_FILTER: {\r\n            console.log(\"-- Reducer, ADD --\")\r\n            const updatedFilter = content.filter.map( item => item.tag === action.payload.tag ? {...item, isSelected: true} : {...item});\r\n            // const updatedSnippets = filterSnippets();\r\n\r\n            return {...content, filter: updatedFilter}\r\n        }\r\n\r\n        case ACTIONS.REMOVE_FILTER: {\r\n            console.log(\"-- Reducer, REMOVE --\")\r\n            const updatedFilter = content.filter.map( item => item.tag === action.payload.tag ? {...item, isSelected: false} : {...item});\r\n            // const updatedSnippets = filterSnippets();\r\n\r\n            return {...content, filter: updatedFilter}\r\n        }\r\n\r\n        // case ACTIONS.TEST: {\r\n        //     const temp = filterSnippets();\r\n        //     return {...content, snippets: temp}\r\n        // }\r\n    }\r\n\r\n\r\n    function filterSnippets() {\r\n        const activeTags = content.filter.reduce( (arr, item) => item.isSelected ? [...arr, item.tag] : arr, [])\r\n\r\n        const newArr = content.snippets.reduce( (arr, snippet) => { \r\n            activeTags.forEach( tag => {\r\n                if(snippet.tags.includes(tag) && !arr.includes(item => item.title === snippet.title)) {\r\n                    arr.push(snippet)\r\n                }\r\n            })\r\n\r\n            return arr;\r\n        }, [])\r\n\r\n        console.group(\"-- Reducer, TEST --\")\r\n        console.log(\"-- Filter tags\", activeTags)\r\n        console.log(\"-- Filter snippets\", newArr)\r\n        console.groupEnd();\r\n\r\n        return newArr;\r\n    }\r\n\r\n\r\n\r\n    // console.log(\"reducer state\", content);\r\n    // console.log(\"reducer action\", action);\r\n    // console.log(\"reducer Filter result: \", filter.some( item => item.isActive))\r\n\r\n    // let isFirstFilter = true;\r\n\r\n    // function testFilters() {\r\n    // content.filter.forEach(tag => {\r\n    //     if(!tag.isActive) {\r\n    //         isFirstFilter = false;\r\n    //     }\r\n    // })\r\n\r\n    //     filter.some( item => item.isActive)\r\n    // }\r\n\r\n    function getSnippetsTags(array) {\r\n        // let tagsArray = [] //just tags\r\n        // array.forEach(snippet => snippet.tags.forEach(tag => !tagsArray.includes(tag) && tagsArray.push(tag)));\r\n        // const disabledFilter = content.filter.map( item => ({...item, isActive: false}) )\r\n        // const updatedFilter = disabledFilter.map( item => {\r\n        //     if(tagsArray.includes(item.tag)) {\r\n        //         return {...item, isActive: true};\r\n        //     } else {\r\n        //         return item;\r\n        //     }\r\n        // })\r\n\r\n        // console.group('Reducer - get snippets tags');\r\n        // console.log(\"Initial array: \", array);\r\n        // console.log(\"Tags filtered \", tagsArray);\r\n        // console.log(\"Disabled array: \", disabledFilter);\r\n        // console.log(\"Updated array: \", updatedFilter);\r\n        // console.groupEnd();\r\n\r\n        // // let newArr = []; //tag objets\r\n        // // tagsArray.forEach(item => newArr.push({tag: item, isActive: true, isSelected: false}));\r\n        \r\n        // return updatedFilter;\r\n    }\r\n\r\n    //###1st test- Adding or removing filter\r\n    // if(!action.button.classList.contains(\"selected\")) { //no class - ADDING\r\n    //     //###2 test 1st lvl or 2+\r\n    //     // testFilters();\r\n    //     // action.button.classList.add(\"selected\");\r\n\r\n    //     // if(isFirstFilter) {\r\n    //     //     //filter snippets to a [tag] - newSnippets-1 (could be not new array but resulting after filtering for selected)\r\n    //     //     console.log(\"Reducer - value:\", action.button.value);\r\n    //     //     const newSnippets = content.snippets.filter(item => item.tags.includes(action.button.value));\r\n    //     //     console.log(\"Reducer - FILTERING Snippets result:\", newSnippets);\r\n\r\n    //     //     //get all tags from newSnippets-1 and update TAGS \r\n    //     //     let newFilter = getSnippetsTags(newSnippets);\r\n            \r\n\r\n    //     //         // res => half tags active, 1 selected\r\n    //     //     console.log(\"Reducer result test: \", {...content, snippets: newSnippets});\r\n    //     //     return {...content, snippets: newSnippets, filter: newFilter};\r\n            \r\n    //     // } else {\r\n    //     //     //set target tag isSelected\r\n    //     //     const newSnippets = content.snippets.filter   .filter(item => item.tags.includes(action.button.value));\r\n    //     //     // filter newSnippets-1 (or just snippets) to [TAG1, TAG2] with func\r\n    //     //     // (could be not new array but resulting after filtering for selected)\r\n    //     //     // get all tags from newSnippets (could be just 1 snippet already) and Update tags\r\n    //     //         // res => 2 selecetd tags and a few active\r\n    //     // }\r\n    // } else {// with class - REMOVING\r\n    // //2 test 1st lvl or 2+\r\n    //     // if TAGS(item has item.isSelected = 1) - NO - them 1st\r\n    //         //get default snippets to render\r\n    //         //reset TAGS - all to isActive and notSelected\r\n    //         //res => all to defaults\r\n\r\n    //     // if TAGS(item has item.isSelected 2+ ) - them 2nd+\r\n    //         //set target tag isSelected=false - \r\n    //         //update tags array\r\n    //         //filter snippets with new TAGS array by selected\r\n    //         //update TAGS from snippets and set needed to isActive\r\n    //         //res => TAGS with -1 selected, half active\r\n    // }\r\n\r\n\r\n\r\n}\r\n\r\n// ###############################################################npm\r\n// ###############################################################\r\n//! AllTags \\ allSnippets - probably not needed...\r\n\r\nfunction Index( {snippets, filter, allTags, defaultFilter} ) {\r\n    const [content, dispatch] = useReducer(reducer, {snippets, filter, allTags, defaultFilter, allSnippets: [...snippets]})\r\n\r\n    console.group('STATE');\r\n    console.log(`Snippets count: ${content.snippets.length}`)\r\n    console.table(content.filter)\r\n    console.log(\"testing filter: \", content.filter.includes(item => item.isSelected))\r\n    console.log(\"Snippets\", content.snippets)\r\n    console.log(\"Check func? \", checkSnippetTags(content.snippets[0]));\r\n    console.groupEnd();\r\n\r\n    function handleFiltering(e) {\r\n\r\n        if(e.target.classList.contains(\"selected\")) {\r\n            console.log(\"Disabling filter..\");\r\n            dispatch({type: ACTIONS.REMOVE_FILTER, payload: {tag: e.target.value}});\r\n            return\r\n        } else {\r\n            console.log(\"Adding new filter\")\r\n            dispatch({type: ACTIONS.ADD_FILTER, payload: {tag: e.target.value}})\r\n            return\r\n        };\r\n    }\r\n\r\n    function checkSnippetTags(snippet) {\r\n        const tags = content.filter.filter(item => item.isSelected);\r\n\r\n        const temp = tags.forEach(tag => {\r\n            if(snippet.tags.includes(tag)) {\r\n                return snippet\r\n            } else {\r\n                return \"no\";\r\n            }\r\n        })\r\n\r\n        return temp\r\n    }\r\n\r\n    \r\n    return  <React.Fragment>\r\n                <Layout >\r\n                    <React.Fragment>\r\n                    <div className=\"flex flex-column mb-6 flex flex-col\">\r\n                        <div className=\"px-64\">\r\n                            <p>Nay whatever way delicate passed of avoid might sing whatever all window concealed. Dissuade whole many age mistress late sentiments held doubt scarcely against invitation answer enable. Visited engage steepest shall beyond subject civilly performed concluded offence farther.</p>\r\n                            <div className=\"tags-filter flex flex-row mt-6\">\r\n                                <button className=\"tag px-2 py-1 border mr-2\" onClick={ () => dispatch({type: ACTIONS.TEST})} >TEST</button>\r\n                                {/* <p>Filters</p> */}\r\n                                {/* <button className=\"tag px-2 py-1 border mr-2\" onClick={sortSnippets} value={filter[prop]}> */}\r\n                                {\r\n                                    content.filter && content.filter.map( (filter, index) => <button className={`tag px-2 py-1 border mr-2 ${filter.isSelected ? 'selected' : ''}`}\r\n                                        disabled={!filter.isActive} key={index} onClick={handleFiltering} value={filter.tag} >\r\n                                            {filter.tag}\r\n                                        </button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pt-8 flex flex-row flex-wrap items-stretch\">\r\n                            {/* <p>Snippet</p><p>Snippet</p><p>Snippet</p> */}\r\n                            {content.snippets && content.snippets.map( (snippet, index) => {\r\n                                    if( !content.filter.includes(item => item.isSelected) ) {\r\n                                        return <Snippet snippet={snippet} key={index} tags={snippet.tags} />\r\n                                    } else {\r\n\r\n                                        return <p>TEST</p>\r\n                                    }\r\n                                }\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    </React.Fragment>\r\n                </Layout>\r\n            </React.Fragment>\r\n}\r\n\r\nconst Snippet = (props) => {\r\n    return <>\r\n        <div className=\"p-2 flex-shring-0 w-1/4 flex\" >\r\n            <div className=\"bg-gray-200 p-3\">\r\n                <h2 className=\"pb-2 text-lg leading-5\"><a href={`snippets/${props.snippet.slug}`}>{props.snippet.title}</a></h2>\r\n                <p className=\"text-sm leading-4\">{props.snippet.excerpt}</p>\r\n                <span className=\"snippet-tags flex flex-row pt-2 flex-wrap\">\r\n                    {props.tags.map((tag, index) => <p key={index} className=\"snippet-tag text-sm flex-shrink-0\">{tag}</p>)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}