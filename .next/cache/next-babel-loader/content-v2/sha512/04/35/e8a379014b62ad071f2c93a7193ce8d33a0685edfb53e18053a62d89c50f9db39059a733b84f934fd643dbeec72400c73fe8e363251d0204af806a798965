{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client'; //import '../styles/globals.css';\n\nimport Blog from \"../components/Blog.jsx\";\nimport Layout from '../components/Layout.jsx';\nimport { request, GraphQLClient, gql } from 'graphql-request';\n\nconst Index = props => {\n  // const [posts, setPosts] = useState([{}])\n  // useEffect(initPosts, [])\n  const {\n    posts = []\n  } = props;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this); // return (\n  //   <div>\n  //     <h1>Welcome to a blog!</h1>\n  //     {posts.map(\n  //       ({ _id, title = '', slug = '', _updatedAt = '' }) =>\n  //         slug && (\n  //           <li key={_id}>\n  //             <Link href=\"/posts/[slug]\" as={`/posts/${slug.current}`}>\n  //               <a>{title}</a>\n  //             </Link>{' '}\n  //             ({new Date(_updatedAt).toDateString()})\n  //           </li>\n  //         )\n  //     )}\n  //   </div>\n  // )\n};\n\nconst endpoint = \"https://api-eu-central-1.graphcms.com/v2/ckm5wfx4hhhng01xhe7gfaavz/master\";\nconst query = gql`\n{\n    posts {\n        id\n        title\n    }\n}\n`; // ###############################################################\n// ###############################################################\n// Run GraphQL queries/mutations using a static function\n// request(endpoint, query, variables).then((data) => console.log(data))\n// ... or create a GraphQL client instance to send requests\n// const client = new GraphQLClient(endpoint, { headers: {} })\n// client.request(query, variables).then((data) => console.log(data))\n// ###############################################################\n// ###############################################################\n// This function gets called at build time\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts\n  // const res = await fetch('https://.../posts')\n  // const posts = await res.json()\n  // const posts = request(endpoint, query).then((data) => data);\n  // const temp = request(endpoint, query).then(data => data).catch(console.error);\n  // console.log(\"TEMP\", temp);\n  const client = new GraphQLClient(endpoint, {\n    headers: {}\n  });\n  client.request(query).then(data => console.log(data)); //console.log(\"FETCHING DATA GQL: \", posts);\n  // By returning { props: { posts } }, the Blog component\n  // will receive `posts` as a prop at build time\n  // return {\n  //   props: {\n  //     posts,\n  //   },\n  // }\n\n  return {\n    props: {}\n  };\n}\nexport default Index;","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/index.js"],"names":["React","useEffect","useState","Link","groq","client","Blog","Layout","request","GraphQLClient","gql","Index","props","posts","endpoint","query","getStaticProps","headers","then","data","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,GAAjC,QAA6C,iBAA7C;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB;AAEA;AAEA,QAAM;AAAEC,IAAAA,KAAK,GAAG;AAAV,MAAiBD,KAAvB;AAEA,sBAAQ,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAAR,CAPqB,CAarB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA7BD;;AA+BA,MAAME,QAAQ,GAAG,2EAAjB;AACA,MAAMC,KAAK,GAAGL,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA,C,CASA;AACA;AAIA;AACI;AAEJ;AACI;AACA;AAGJ;AACA;AAEA;;AACA,OAAO,eAAeM,cAAf,GAAgC;AACnC;AACA;AACA;AAEA;AAEA;AACA;AAEA,QAAMX,MAAM,GAAG,IAAII,aAAJ,CAAkBK,QAAlB,EAA4B;AAAEG,IAAAA,OAAO,EAAE;AAAX,GAA5B,CAAf;AACAZ,EAAAA,MAAM,CAACG,OAAP,CAAeO,KAAf,EAAsBG,IAAtB,CAA4BC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAArC,EAXmC,CAanC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAO;AAAEP,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD;AAEH,eAAeD,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Link from 'next/link';\r\nimport groq from 'groq';\r\nimport client from '../client';\r\n//import '../styles/globals.css';\r\n\r\nimport Blog from \"../components/Blog.jsx\";\r\nimport Layout from '../components/Layout.jsx';\r\nimport { request, GraphQLClient, gql  } from 'graphql-request';\r\n\r\n\r\nconst Index = (props) => {\r\n    // const [posts, setPosts] = useState([{}])\r\n\r\n    // useEffect(initPosts, [])\r\n\r\n    const { posts = [] } = props;\r\n    \r\n    return  <React.Fragment>\r\n                <Layout >\r\n                    {/* {props.posts.length > 1 ? <Blog source={posts} test={\"testing string\"} /> : <p>Loading...</p>} */}\r\n                </Layout>\r\n            </React.Fragment>\r\n\r\n    // return (\r\n    //   <div>\r\n    //     <h1>Welcome to a blog!</h1>\r\n    //     {posts.map(\r\n    //       ({ _id, title = '', slug = '', _updatedAt = '' }) =>\r\n    //         slug && (\r\n    //           <li key={_id}>\r\n    //             <Link href=\"/posts/[slug]\" as={`/posts/${slug.current}`}>\r\n    //               <a>{title}</a>\r\n    //             </Link>{' '}\r\n    //             ({new Date(_updatedAt).toDateString()})\r\n    //           </li>\r\n    //         )\r\n    //     )}\r\n    //   </div>\r\n    // )\r\n}\r\n\r\nconst endpoint = \"https://api-eu-central-1.graphcms.com/v2/ckm5wfx4hhhng01xhe7gfaavz/master\";\r\nconst query = gql`\r\n{\r\n    posts {\r\n        id\r\n        title\r\n    }\r\n}\r\n`\r\n\r\n// ###############################################################\r\n// ###############################################################\r\n\r\n\r\n\r\n// Run GraphQL queries/mutations using a static function\r\n    // request(endpoint, query, variables).then((data) => console.log(data))\r\n\r\n// ... or create a GraphQL client instance to send requests\r\n    // const client = new GraphQLClient(endpoint, { headers: {} })\r\n    // client.request(query, variables).then((data) => console.log(data))\r\n\r\n\r\n// ###############################################################\r\n// ###############################################################\r\n\r\n// This function gets called at build time\r\nexport async function getStaticProps() {\r\n    // Call an external API endpoint to get posts\r\n    // const res = await fetch('https://.../posts')\r\n    // const posts = await res.json()\r\n\r\n    // const posts = request(endpoint, query).then((data) => data);\r\n\r\n    // const temp = request(endpoint, query).then(data => data).catch(console.error);\r\n    // console.log(\"TEMP\", temp);\r\n\r\n    const client = new GraphQLClient(endpoint, { headers: {} })\r\n    client.request(query).then((data) => console.log(data))\r\n\r\n    //console.log(\"FETCHING DATA GQL: \", posts);\r\n  \r\n    // By returning { props: { posts } }, the Blog component\r\n    // will receive `posts` as a prop at build time\r\n    // return {\r\n    //   props: {\r\n    //     posts,\r\n    //   },\r\n    // }\r\n    return { props: { } }\r\n  }\r\n\r\nexport default Index\r\n\r\n"]},"metadata":{},"sourceType":"module"}