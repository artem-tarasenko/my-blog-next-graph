{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\snippets\\\\index.js\",\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useEffect, useState } from \"react\";\nimport Layout from '../../components/Layout.jsx'; // ###############################################################\n// ###############################################################\n\n// ###############################################################\n// ###############################################################\nfunction Index(_ref) {\n  _s();\n\n  var _this = this;\n\n  var snippets = _ref.snippets,\n      tags = _ref.tags;\n\n  var _useState = useState(snippets),\n      snippetsArray = _useState[0],\n      setSnippetsArray = _useState[1];\n\n  var _useState2 = useState(tags),\n      filter = _useState2[0],\n      setFilter = _useState2[1]; // console.log(\"SNIPPETS PROPS DATA > \", snippets);\n  // console.log(\"TAGS PROPS DATA > \", tags);\n  //Sort entrees by selected tag\n\n\n  function sortByTag(e) {\n    console.group('Init sorting');\n    console.log(\"On Click # Snippets pressed\", e.target.value);\n    console.log(\"On Click # Snippets arr\", e.target.classList);\n    console.log(\"On click # event\", e.target);\n    console.groupEnd();\n    var filterValue = [];\n\n    if (e.target.classList.contains(\"selected\")) {\n      //DEACTIVATING FILTER\n      console.group('Deactivating...');\n      e.target.classList.remove(\"selected\"); //test whether filter had 1 tag or more\n\n      if (filter.length = 1) {\n        //resetting filter to default\n        console.group('Deselecting tag');\n        console.log(\"Removing last filter (filter length):\", filter.length);\n        setFilter(tags);\n        console.log(\"Resetting default filter (length):\", filter.length);\n        console.groupEnd();\n      } else {\n        //remove tag from filter\n        console.log(\"At least 2 filters, removing selected (init filterss, remove tag):\", filter, e.target.value);\n        setFilter(function (prevValue) {\n          return prevValue.filter(tag != e.target.value);\n        });\n        console.log(\"New filter value:\", filter);\n        console.groupEnd();\n      }\n    } else if (!e.target.classList.contains(\"selected\")) {\n      //ACTIVATING FILTER\n      console.group('Activating...');\n      e.target.classList.add(\"selected\"); //test whether filter was default or not\n\n      if (filter === tags) {\n        console.log(\"Filters are equal (tags, filter):\", tags.length, filter.length); //remove all filter data if filter=tags, add 1 selected\n        //rerender snippets\n\n        console.log(\"Updating filter, should be 1 item only\");\n        setFilter([e.target.value]);\n        console.log(\"New filter value:\", filter);\n        console.groupEnd();\n      } else {\n        console.log(\"Filters are NOT equal (tags, filter):\", tags.length, filter.length);\n        setFilter(function (prevValue) {\n          return [].concat(_toConsumableArray(prevValue), [e.target.value]);\n        });\n        console.log(\"New filter value:\", filter);\n        console.groupEnd();\n      } //reset filter if 1 only was selected\n      //remove selected if 2+ were selected\n      //rerender snippets\n\n    } // const filteredArray = snippetsArray.filter(item => item.tags.includes(e.target.value));\n    // console.log(\"On click # filtered array of snippets: \", filteredArray);\n    // setSnippetsArray(filteredArray);\n\n  }\n\n  function sortSnippets(filter) {\n    setFilter([\"test tag\"]);\n  }\n\n  console.log(\"###########################################################################\");\n  console.log(\"Snippets #####\", snippetsArray);\n  console.log(\"Filters #####\", filter);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-column mb-6 flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-64\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Nay whatever way delicate passed of avoid might sing whatever all window concealed. Dissuade whole many age mistress late sentiments held doubt scarcely against invitation answer enable. Visited engage steepest shall beyond subject civilly performed concluded offence farther.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tags-filter flex flex-row mt-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"tag px-2 py-1 border mr-2\",\n                onClick: sortSnippets,\n                children: \"TEST\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this), tags.map(function (tag) {\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"tag px-2 py-1 border mr-2\",\n                  onClick: sortByTag,\n                  value: tag,\n                  children: tag\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 41\n                }, _this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-8 flex flex-row flex-wrap items-stretch\",\n            children: snippetsArray.map(function (snippet) {\n              var isActive = false; //console.log(\"Snippet in MAP\", snippet.title);\n\n              var _iterator = _createForOfIteratorHelper(snippet.tags),\n                  _step;\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  var _tag = _step.value;\n                  console.groupCollapsed('ACTIVATING SNIPPET'); //console.log(\"FOR LOOP: (snippet, tag)\", snippet.title, tag);\n\n                  if (filter.includes(_tag)) {\n                    isActive = true;\n                    console.log(\"title\", snippet.title);\n                    console.log(\"tag\", _tag);\n                    console.log(\"TAGS DEF\", tags);\n                    console.log(\"isActive?\", isActive);\n                    console.groupEnd();\n                    break;\n                  }\n\n                  console.log(\"bool:\", isActive);\n                  console.groupEnd();\n                } // isActive \n                //     ? ( <>\n                //         <div className=\"p-2 flex-shring-0 w-1/4 flex\">\n                //             <div className=\"bg-gray-200 p-3\">\n                //                 <h2 className=\"pb-2 text-lg leading-5\"><a href={`snippets/${snippet.slug}`}>{snippet.title}</a></h2>\n                //                 <p className=\"text-sm leading-4\">{snippet.excerpt}</p>\n                //                 <span className=\"snippet-tags flex flex-row pt-2 flex-wrap\">\n                //                     {snippet.tags.map(tag => <p className=\"snippet-tag text-sm flex-shrink-0\">{tag}</p>)}\n                //                 </span>\n                //             </div>\n                //         </div>\n                //     </>)\n                //     : null\n\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              if (isActive) {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"p-2 flex-shring-0 w-1/4 flex\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-gray-200 p-3\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                        className: \"pb-2 text-lg leading-5\",\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          href: \"snippets/\".concat(snippet.slug),\n                          children: snippet.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 180,\n                          columnNumber: 93\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 54\n                      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-sm leading-4\",\n                        children: snippet.excerpt\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 54\n                      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"snippet-tags flex flex-row pt-2 flex-wrap\",\n                        children: snippet.tags.map(function (tag) {\n                          return /*#__PURE__*/_jsxDEV(\"p\", {\n                            className: \"snippet-tag text-sm flex-shrink-0\",\n                            children: tag\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 183,\n                            columnNumber: 83\n                          }, _this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 54\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 50\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 46\n                  }, _this)\n                }, void 0, false);\n              } else {\n                return null;\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Index, \"otp6SVGHjWj2ToUi8F6+Ptm1YW8=\");\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/snippets/index.js"],"names":["React","useEffect","useState","Layout","Index","snippets","tags","snippetsArray","setSnippetsArray","filter","setFilter","sortByTag","e","console","group","log","target","value","classList","groupEnd","filterValue","contains","remove","length","prevValue","tag","add","sortSnippets","map","snippet","isActive","groupCollapsed","includes","title","slug","excerpt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\n\r\nimport Layout from '../../components/Layout.jsx';\r\n\r\n\r\n\r\n// ###############################################################\r\n// ###############################################################\r\nconst client = new ApolloClient({\r\n    uri: process.env.REACT_APP_GRAPH_API,\r\n    cache: new InMemoryCache()\r\n});\r\n\r\n// ###############################################################\r\n// ###############################################################\r\n// This function gets called at build time\r\nexport async function getStaticProps() {\r\n    //destructure response to data obj\r\n    const { data: {snippets} } = await client.query({\r\n        query: gql`{ \r\n            snippets {\r\n                title\r\n                slug\r\n                tags\r\n                excerpt\r\n                createdAt\r\n              } \r\n        }`\r\n    });\r\n\r\n    //collecting all possible tags for snippets to pass them as default value\r\n    let tagsArray = []\r\n    snippets.forEach(snippet => snippet.tags.forEach(tag => !tagsArray.includes(tag) && tagsArray.push(tag)));\r\n\r\n    return { props: {snippets: snippets, tags: tagsArray} };\r\n  }\r\n\r\n\r\n\r\n\r\n// ###############################################################\r\n// ###############################################################\r\nfunction Index( {snippets, tags} ) {\r\n    const [snippetsArray, setSnippetsArray] = useState(snippets);\r\n    const [filter, setFilter] = useState(tags)\r\n    // console.log(\"SNIPPETS PROPS DATA > \", snippets);\r\n    // console.log(\"TAGS PROPS DATA > \", tags);\r\n\r\n    //Sort entrees by selected tag\r\n    function sortByTag(e) {\r\n        console.group('Init sorting');\r\n            console.log(\"On Click # Snippets pressed\", e.target.value);\r\n            console.log(\"On Click # Snippets arr\", e.target.classList);\r\n            console.log(\"On click # event\", e.target);\r\n        console.groupEnd();\r\n\r\n        let filterValue = [];\r\n\r\n\r\n\r\n        if(e.target.classList.contains(\"selected\")) {\r\n            //DEACTIVATING FILTER\r\n            console.group('Deactivating...');\r\n            e.target.classList.remove(\"selected\");\r\n            //test whether filter had 1 tag or more\r\n            if(filter.length = 1) {\r\n                //resetting filter to default\r\n                console.group('Deselecting tag');\r\n                console.log(\"Removing last filter (filter length):\", filter.length);\r\n                setFilter(tags);\r\n                console.log(\"Resetting default filter (length):\", filter.length);\r\n                console.groupEnd();\r\n            } else {\r\n                //remove tag from filter\r\n                console.log(\"At least 2 filters, removing selected (init filterss, remove tag):\", filter, e.target.value);\r\n                \r\n                setFilter(prevValue => prevValue.filter( tag != e.target.value))\r\n                console.log(\"New filter value:\", filter);\r\n                console.groupEnd();\r\n            }\r\n\r\n        } else if(!e.target.classList.contains(\"selected\")) {\r\n            //ACTIVATING FILTER\r\n            console.group('Activating...');\r\n            e.target.classList.add(\"selected\");\r\n\r\n            //test whether filter was default or not\r\n            if(filter === tags) {\r\n                console.log(\"Filters are equal (tags, filter):\", tags.length, filter.length);\r\n                //remove all filter data if filter=tags, add 1 selected\r\n                //rerender snippets\r\n                console.log(\"Updating filter, should be 1 item only\");\r\n                setFilter([e.target.value]);\r\n                console.log(\"New filter value:\", filter);\r\n                console.groupEnd();\r\n\r\n            } else {\r\n                console.log(\"Filters are NOT equal (tags, filter):\", tags.length, filter.length);\r\n                \r\n                setFilter(prevValue => [...prevValue, e.target.value])\r\n                console.log(\"New filter value:\", filter);\r\n                console.groupEnd();\r\n            }\r\n            //reset filter if 1 only was selected\r\n            //remove selected if 2+ were selected\r\n            //rerender snippets\r\n        }\r\n        \r\n\r\n        \r\n\r\n        // const filteredArray = snippetsArray.filter(item => item.tags.includes(e.target.value));\r\n        // console.log(\"On click # filtered array of snippets: \", filteredArray);\r\n        // setSnippetsArray(filteredArray);\r\n    }\r\n\r\n    function sortSnippets(filter) {\r\n        setFilter([\"test tag\"]);\r\n    }\r\n\r\n\r\n    console.log(\"###########################################################################\");\r\n    console.log(\"Snippets #####\", snippetsArray);\r\n    console.log(\"Filters #####\", filter);\r\n    \r\n    return  <React.Fragment>\r\n                <Layout >\r\n                    <React.Fragment>\r\n                        <div className=\"flex flex-column mb-6 flex flex-col\">\r\n                            <div className=\"px-64\">\r\n                                <p>Nay whatever way delicate passed of avoid might sing whatever all window concealed. Dissuade whole many age mistress late sentiments held doubt scarcely against invitation answer enable. Visited engage steepest shall beyond subject civilly performed concluded offence farther.</p>\r\n                                <div className=\"tags-filter flex flex-row mt-6\">\r\n                                    <button className=\"tag px-2 py-1 border mr-2\" onClick={sortSnippets}>TEST</button>\r\n                                    {tags.map( tag => (\r\n                                        <button className=\"tag px-2 py-1 border mr-2\" onClick={sortByTag} value={tag}>{tag}</button>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"pt-8 flex flex-row flex-wrap items-stretch\">\r\n                                {snippetsArray.map(snippet => {\r\n                                    let isActive = false;\r\n                                    //console.log(\"Snippet in MAP\", snippet.title);\r\n                                    for(let tag of snippet.tags) {\r\n                                        console.groupCollapsed('ACTIVATING SNIPPET');\r\n                                        //console.log(\"FOR LOOP: (snippet, tag)\", snippet.title, tag);\r\n                                        if(filter.includes(tag)) {\r\n                                            isActive= true;\r\n                                            \r\n                                            console.log(\"title\", snippet.title);\r\n                                            console.log(\"tag\", tag);\r\n                                            console.log(\"TAGS DEF\", tags);\r\n                                            console.log(\"isActive?\", isActive);\r\n                                            console.groupEnd();\r\n                                            \r\n                                            break;\r\n                                        }\r\n                                        console.log(\"bool:\", isActive);\r\n                                        console.groupEnd();\r\n                                    }\r\n                                    \r\n                                    // isActive \r\n                                    //     ? ( <>\r\n                                    //         <div className=\"p-2 flex-shring-0 w-1/4 flex\">\r\n                                    //             <div className=\"bg-gray-200 p-3\">\r\n                                    //                 <h2 className=\"pb-2 text-lg leading-5\"><a href={`snippets/${snippet.slug}`}>{snippet.title}</a></h2>\r\n                                    //                 <p className=\"text-sm leading-4\">{snippet.excerpt}</p>\r\n                                    //                 <span className=\"snippet-tags flex flex-row pt-2 flex-wrap\">\r\n                                    //                     {snippet.tags.map(tag => <p className=\"snippet-tag text-sm flex-shrink-0\">{tag}</p>)}\r\n                                    //                 </span>\r\n                                    //             </div>\r\n                                    //         </div>\r\n                                    //     </>)\r\n                                    //     : null\r\n\r\n                                    if(isActive) {\r\n                                        return <>\r\n                                             <div className=\"p-2 flex-shring-0 w-1/4 flex\">\r\n                                                 <div className=\"bg-gray-200 p-3\">\r\n                                                     <h2 className=\"pb-2 text-lg leading-5\"><a href={`snippets/${snippet.slug}`}>{snippet.title}</a></h2>\r\n                                                     <p className=\"text-sm leading-4\">{snippet.excerpt}</p>\r\n                                                     <span className=\"snippet-tags flex flex-row pt-2 flex-wrap\">\r\n                                                         {snippet.tags.map(tag => <p className=\"snippet-tag text-sm flex-shrink-0\">{tag}</p>)}\r\n                                                     </span>\r\n                                                 </div>\r\n                                             </div>\r\n                                         </>\r\n                                    } else {\r\n                                        return null\r\n                                    }\r\n\r\n\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                </Layout>\r\n            </React.Fragment>\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}