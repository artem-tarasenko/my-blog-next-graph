{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\snippets\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nimport Layout from '../../components/Layout.jsx'; //! REMOVE THIS LINE LATER\n\nprocess.env['NODE_TLS_REJECT_UNAUTHORIZED'] = 0; // ###############################################################\n// ###############################################################\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_GRAPH_API,\n  cache: new InMemoryCache()\n}); // ###############################################################\n// ###############################################################\n// This function gets called at build time\n\nexport async function getStaticProps() {\n  //destructure response to data obj\n  const {\n    data: {\n      snippets\n    }\n  } = await client.query({\n    query: gql`{ \n            snippets {\n                title\n                slug\n                tags\n                excerpt\n                createdAt\n              } \n        }`\n  }); //collecting all possible tags for snippets to pass them as default value\n\n  let tagsArray = [];\n  snippets.forEach(snippet => snippet.tags.forEach(tag => !tagsArray.includes(tag) && tagsArray.push(tag)));\n  let newArr = [];\n  tagsArray.forEach(item => newArr.push({\n    tag: item,\n    isActive: true,\n    isSelected: false\n  }));\n  const initialContent = {\n    snippets: snippets,\n    filter: newArr,\n    allTags: tagsArray,\n    defaultFilter: newArr\n  };\n  return {\n    props: initialContent\n  };\n}\nconst ACTIONS = {\n  ADD_FILTER: 'add',\n  REMOVE_FILTER: 'remove',\n  TEST: 'test'\n};\n\nfunction reducer(content, action) {\n  const initState = content.snippets; //all 8 items\n\n  console.log(\"-- Reducer, CONTENT INIT --\", initState);\n\n  switch (action.type) {\n    case ACTIONS.ADD_FILTER:\n      {\n        console.log(\"-- Reducer, ADD --\");\n        const updatedFilter = content.filter.map(item => item.tag === action.payload.tag ? _objectSpread(_objectSpread({}, item), {}, {\n          isSelected: true\n        }) : _objectSpread({}, item));\n        return _objectSpread(_objectSpread({}, content), {}, {\n          filter: updatedFilter\n        });\n      }\n\n    case ACTIONS.REMOVE_FILTER:\n      {\n        console.log(\"-- Reducer, REMOVE --\");\n        const updatedFilter = content.filter.map(item => item.tag === action.payload.tag ? _objectSpread(_objectSpread({}, item), {}, {\n          isSelected: false\n        }) : _objectSpread({}, item));\n        return _objectSpread(_objectSpread({}, content), {}, {\n          filter: updatedFilter\n        });\n      }\n\n    case ACTIONS.TEST:\n      {\n        const temp = filterSnippets();\n        return _objectSpread(_objectSpread({}, content), {}, {\n          snippets: temp\n        });\n      }\n  }\n\n  function filterSnippets() {\n    const activeTags = content.filter.reduce((arr, item) => item.isSelected ? [...arr, item.tag] : arr, []);\n    const newArr = content.snippets.reduce((arr, snippet) => {\n      activeTags.forEach(tag => {\n        if (snippet.tags.includes(tag) && !arr.includes(item => item.title === snippet.title)) {\n          arr.push(snippet);\n        }\n      });\n      return arr;\n    }, []);\n    console.group(\"-- Reducer, TEST --\");\n    console.log(\"-- Filter tags\", activeTags);\n    console.log(\"-- Filter snippets\", newArr);\n    console.groupEnd();\n    return newArr;\n  } // console.log(\"reducer state\", content);\n  // console.log(\"reducer action\", action);\n  // console.log(\"reducer Filter result: \", filter.some( item => item.isActive))\n  // let isFirstFilter = true;\n  // function testFilters() {\n  // content.filter.forEach(tag => {\n  //     if(!tag.isActive) {\n  //         isFirstFilter = false;\n  //     }\n  // })\n  //     filter.some( item => item.isActive)\n  // }\n\n\n  function getSnippetsTags(array) {// let tagsArray = [] //just tags\n    // array.forEach(snippet => snippet.tags.forEach(tag => !tagsArray.includes(tag) && tagsArray.push(tag)));\n    // const disabledFilter = content.filter.map( item => ({...item, isActive: false}) )\n    // const updatedFilter = disabledFilter.map( item => {\n    //     if(tagsArray.includes(item.tag)) {\n    //         return {...item, isActive: true};\n    //     } else {\n    //         return item;\n    //     }\n    // })\n    // console.group('Reducer - get snippets tags');\n    // console.log(\"Initial array: \", array);\n    // console.log(\"Tags filtered \", tagsArray);\n    // console.log(\"Disabled array: \", disabledFilter);\n    // console.log(\"Updated array: \", updatedFilter);\n    // console.groupEnd();\n    // // let newArr = []; //tag objets\n    // // tagsArray.forEach(item => newArr.push({tag: item, isActive: true, isSelected: false}));\n    // return updatedFilter;\n  } //###1st test- Adding or removing filter\n  // if(!action.button.classList.contains(\"selected\")) { //no class - ADDING\n  //     //###2 test 1st lvl or 2+\n  //     // testFilters();\n  //     // action.button.classList.add(\"selected\");\n  //     // if(isFirstFilter) {\n  //     //     //filter snippets to a [tag] - newSnippets-1 (could be not new array but resulting after filtering for selected)\n  //     //     console.log(\"Reducer - value:\", action.button.value);\n  //     //     const newSnippets = content.snippets.filter(item => item.tags.includes(action.button.value));\n  //     //     console.log(\"Reducer - FILTERING Snippets result:\", newSnippets);\n  //     //     //get all tags from newSnippets-1 and update TAGS \n  //     //     let newFilter = getSnippetsTags(newSnippets);\n  //     //         // res => half tags active, 1 selected\n  //     //     console.log(\"Reducer result test: \", {...content, snippets: newSnippets});\n  //     //     return {...content, snippets: newSnippets, filter: newFilter};\n  //     // } else {\n  //     //     //set target tag isSelected\n  //     //     const newSnippets = content.snippets.filter   .filter(item => item.tags.includes(action.button.value));\n  //     //     // filter newSnippets-1 (or just snippets) to [TAG1, TAG2] with func\n  //     //     // (could be not new array but resulting after filtering for selected)\n  //     //     // get all tags from newSnippets (could be just 1 snippet already) and Update tags\n  //     //         // res => 2 selecetd tags and a few active\n  //     // }\n  // } else {// with class - REMOVING\n  // //2 test 1st lvl or 2+\n  //     // if TAGS(item has item.isSelected = 1) - NO - them 1st\n  //         //get default snippets to render\n  //         //reset TAGS - all to isActive and notSelected\n  //         //res => all to defaults\n  //     // if TAGS(item has item.isSelected 2+ ) - them 2nd+\n  //         //set target tag isSelected=false - \n  //         //update tags array\n  //         //filter snippets with new TAGS array by selected\n  //         //update TAGS from snippets and set needed to isActive\n  //         //res => TAGS with -1 selected, half active\n  // }\n\n} // ###############################################################npm\n// ###############################################################\n\n\nfunction Index({\n  snippets,\n  filter,\n  allTags,\n  defaultFilter\n}) {\n  const {\n    0: content,\n    1: dispatch\n  } = useReducer(reducer, {\n    snippets,\n    filter,\n    allTags,\n    defaultFilter,\n    allsnippets: [snippets]\n  }); // useEffect(() => {\n  //     dispatch({type: ACTIONS.INIT, payloadL: {snippets, filter, allTags, defaultFilter}})\n  // }, [])\n  // function reducer(exportState, action) {\n  //     switch (action.type) {\n  //         case \"selected\": {\n  //             handleSelectTemplate(action.payload.target, action.payload.name) //clicked node and its title\n  //             return {...exportState, template: action.payload.name, state: {...exportState.state, isSelected: true}}\n  //             }\n  // const [exportState, dispatch] = useReducer(reducer, {template: \"\", code: appData.code, state: {isDone: false, isLoading: false, isSelected: false}})\n  //dispatch({type: 'selected', payload: {name: item?.name, target: e.target}})}\n  // console.log(\"#####   Component Filter > \", content.filter);\n\n  function handleFiltering(e) {\n    if (e.target.classList.contains(\"selected\")) {\n      console.log(\"Disabling filter..\");\n      dispatch({\n        type: ACTIONS.REMOVE_FILTER,\n        payload: {\n          tag: e.target.value\n        }\n      });\n      return;\n    } else {\n      console.log(\"Adding new filter\");\n      dispatch({\n        type: ACTIONS.ADD_FILTER,\n        payload: {\n          tag: e.target.value\n        }\n      });\n      return;\n    }\n\n    ;\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-column mb-6 flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-64\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Nay whatever way delicate passed of avoid might sing whatever all window concealed. Dissuade whole many age mistress late sentiments held doubt scarcely against invitation answer enable. Visited engage steepest shall beyond subject civilly performed concluded offence farther.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tags-filter flex flex-row mt-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"tag px-2 py-1 border mr-2\",\n                onClick: () => dispatch({\n                  type: ACTIONS.TEST\n                }),\n                children: \"TEST\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this), content.filter && content.filter.map((filter, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `tag px-2 py-1 border mr-2 ${filter.isSelected ? 'selected' : ''}`,\n                disabled: !filter.isActive,\n                onClick: handleFiltering,\n                value: filter.tag,\n                children: filter.tag\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 94\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-8 flex flex-row flex-wrap items-stretch\",\n            children: content.snippets && content.snippets.map((snippet, index) =>\n            /*#__PURE__*/\n            //if filter length > 0\n            _jsxDEV(\"div\", {\n              className: \"p-2 flex-shring-0 w-1/4 flex\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-200 p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"pb-2 text-lg leading-5\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: `snippets/${snippet.slug}`,\n                    children: snippet.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 76\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm leading-4\",\n                  children: snippet.excerpt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"snippet-tags flex flex-row pt-2 flex-wrap\",\n                  children: snippet.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"snippet-tag text-sm flex-shrink-0\",\n                    children: tag\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 75\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 13\n  }, this);\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/snippets/index.js"],"names":["React","useEffect","useReducer","useState","ApolloClient","InMemoryCache","gql","Layout","process","env","client","uri","REACT_APP_GRAPH_API","cache","getStaticProps","data","snippets","query","tagsArray","forEach","snippet","tags","tag","includes","push","newArr","item","isActive","isSelected","initialContent","filter","allTags","defaultFilter","props","ACTIONS","ADD_FILTER","REMOVE_FILTER","TEST","reducer","content","action","initState","console","log","type","updatedFilter","map","payload","temp","filterSnippets","activeTags","reduce","arr","title","group","groupEnd","getSnippetsTags","array","Index","dispatch","allsnippets","handleFiltering","e","target","classList","contains","value","index","slug","excerpt"],"mappings":"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","sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\nimport Layout from '../../components/Layout.jsx';\r\n\r\n\r\n//! REMOVE THIS LINE LATER\r\nprocess.env['NODE_TLS_REJECT_UNAUTHORIZED'] = 0;\r\n\r\n// ###############################################################\r\n// ###############################################################\r\nconst client = new ApolloClient({\r\n    uri: process.env.REACT_APP_GRAPH_API,\r\n    cache: new InMemoryCache()\r\n});\r\n\r\n// ###############################################################\r\n// ###############################################################\r\n// This function gets called at build time\r\nexport async function getStaticProps() {\r\n    //destructure response to data obj\r\n    const { data: {snippets} } = await client.query({\r\n        query: gql`{ \r\n            snippets {\r\n                title\r\n                slug\r\n                tags\r\n                excerpt\r\n                createdAt\r\n              } \r\n        }`\r\n    });\r\n\r\n    //collecting all possible tags for snippets to pass them as default value\r\n    let tagsArray = []\r\n    snippets.forEach(snippet => snippet.tags.forEach(tag => !tagsArray.includes(tag) && tagsArray.push(tag)));\r\n\r\n    let newArr = [];\r\n    tagsArray.forEach(item => newArr.push({tag: item, isActive: true, isSelected: false}));\r\n    const initialContent = { snippets: snippets, filter: newArr, allTags: tagsArray, defaultFilter: newArr }\r\n\r\n    return { props: initialContent};\r\n  }\r\n\r\n\r\nconst ACTIONS = {\r\n    ADD_FILTER: 'add',\r\n    REMOVE_FILTER: 'remove',\r\n    TEST: 'test'\r\n  }\r\n\r\nfunction reducer(content, action) {\r\n    const initState = content.snippets; //all 8 items\r\n    console.log(\"-- Reducer, CONTENT INIT --\", initState)\r\n    \r\n    switch(action.type) {\r\n        case ACTIONS.ADD_FILTER: {\r\n            console.log(\"-- Reducer, ADD --\")\r\n            const updatedFilter = content.filter.map( item => item.tag === action.payload.tag ? {...item, isSelected: true} : {...item});\r\n\r\n            return {...content, filter: updatedFilter}\r\n        }\r\n\r\n        case ACTIONS.REMOVE_FILTER: {\r\n            console.log(\"-- Reducer, REMOVE --\")\r\n            const updatedFilter = content.filter.map( item => item.tag === action.payload.tag ? {...item, isSelected: false} : {...item});\r\n\r\n            return {...content, filter: updatedFilter}\r\n        }\r\n\r\n        case ACTIONS.TEST: {\r\n            const temp = filterSnippets();\r\n            return {...content, snippets: temp}\r\n        }\r\n    }\r\n\r\n    function filterSnippets() {\r\n        const activeTags = content.filter.reduce( (arr, item) => item.isSelected ? [...arr, item.tag] : arr, [])\r\n\r\n        const newArr = content.snippets.reduce( (arr, snippet) => { \r\n            activeTags.forEach( tag => {\r\n                if(snippet.tags.includes(tag) && !arr.includes(item => item.title === snippet.title)) {\r\n                    arr.push(snippet)\r\n                }\r\n            })\r\n\r\n            return arr;\r\n        }, [])\r\n\r\n        console.group(\"-- Reducer, TEST --\")\r\n        console.log(\"-- Filter tags\", activeTags)\r\n        console.log(\"-- Filter snippets\", newArr)\r\n        console.groupEnd();\r\n\r\n        return newArr;\r\n    }\r\n\r\n\r\n\r\n    // console.log(\"reducer state\", content);\r\n    // console.log(\"reducer action\", action);\r\n    // console.log(\"reducer Filter result: \", filter.some( item => item.isActive))\r\n\r\n    // let isFirstFilter = true;\r\n\r\n    // function testFilters() {\r\n    // content.filter.forEach(tag => {\r\n    //     if(!tag.isActive) {\r\n    //         isFirstFilter = false;\r\n    //     }\r\n    // })\r\n\r\n    //     filter.some( item => item.isActive)\r\n    // }\r\n\r\n    function getSnippetsTags(array) {\r\n        // let tagsArray = [] //just tags\r\n        // array.forEach(snippet => snippet.tags.forEach(tag => !tagsArray.includes(tag) && tagsArray.push(tag)));\r\n        // const disabledFilter = content.filter.map( item => ({...item, isActive: false}) )\r\n        // const updatedFilter = disabledFilter.map( item => {\r\n        //     if(tagsArray.includes(item.tag)) {\r\n        //         return {...item, isActive: true};\r\n        //     } else {\r\n        //         return item;\r\n        //     }\r\n        // })\r\n\r\n        // console.group('Reducer - get snippets tags');\r\n        // console.log(\"Initial array: \", array);\r\n        // console.log(\"Tags filtered \", tagsArray);\r\n        // console.log(\"Disabled array: \", disabledFilter);\r\n        // console.log(\"Updated array: \", updatedFilter);\r\n        // console.groupEnd();\r\n\r\n        // // let newArr = []; //tag objets\r\n        // // tagsArray.forEach(item => newArr.push({tag: item, isActive: true, isSelected: false}));\r\n        \r\n        // return updatedFilter;\r\n    }\r\n\r\n    //###1st test- Adding or removing filter\r\n    // if(!action.button.classList.contains(\"selected\")) { //no class - ADDING\r\n    //     //###2 test 1st lvl or 2+\r\n    //     // testFilters();\r\n    //     // action.button.classList.add(\"selected\");\r\n\r\n    //     // if(isFirstFilter) {\r\n    //     //     //filter snippets to a [tag] - newSnippets-1 (could be not new array but resulting after filtering for selected)\r\n    //     //     console.log(\"Reducer - value:\", action.button.value);\r\n    //     //     const newSnippets = content.snippets.filter(item => item.tags.includes(action.button.value));\r\n    //     //     console.log(\"Reducer - FILTERING Snippets result:\", newSnippets);\r\n\r\n    //     //     //get all tags from newSnippets-1 and update TAGS \r\n    //     //     let newFilter = getSnippetsTags(newSnippets);\r\n            \r\n\r\n    //     //         // res => half tags active, 1 selected\r\n    //     //     console.log(\"Reducer result test: \", {...content, snippets: newSnippets});\r\n    //     //     return {...content, snippets: newSnippets, filter: newFilter};\r\n            \r\n    //     // } else {\r\n    //     //     //set target tag isSelected\r\n    //     //     const newSnippets = content.snippets.filter   .filter(item => item.tags.includes(action.button.value));\r\n    //     //     // filter newSnippets-1 (or just snippets) to [TAG1, TAG2] with func\r\n    //     //     // (could be not new array but resulting after filtering for selected)\r\n    //     //     // get all tags from newSnippets (could be just 1 snippet already) and Update tags\r\n    //     //         // res => 2 selecetd tags and a few active\r\n    //     // }\r\n    // } else {// with class - REMOVING\r\n    // //2 test 1st lvl or 2+\r\n    //     // if TAGS(item has item.isSelected = 1) - NO - them 1st\r\n    //         //get default snippets to render\r\n    //         //reset TAGS - all to isActive and notSelected\r\n    //         //res => all to defaults\r\n\r\n    //     // if TAGS(item has item.isSelected 2+ ) - them 2nd+\r\n    //         //set target tag isSelected=false - \r\n    //         //update tags array\r\n    //         //filter snippets with new TAGS array by selected\r\n    //         //update TAGS from snippets and set needed to isActive\r\n    //         //res => TAGS with -1 selected, half active\r\n    // }\r\n\r\n\r\n\r\n}\r\n\r\n// ###############################################################npm\r\n// ###############################################################\r\nfunction Index( {snippets, filter, allTags, defaultFilter} ) {\r\n    const [content, dispatch] = useReducer(reducer, {snippets, filter, allTags, defaultFilter, allsnippets: [snippets]})\r\n\r\n    // useEffect(() => {\r\n    //     dispatch({type: ACTIONS.INIT, payloadL: {snippets, filter, allTags, defaultFilter}})\r\n    // }, [])\r\n\r\n    // function reducer(exportState, action) {\r\n    //     switch (action.type) {\r\n    //         case \"selected\": {\r\n    //             handleSelectTemplate(action.payload.target, action.payload.name) //clicked node and its title\r\n    //             return {...exportState, template: action.payload.name, state: {...exportState.state, isSelected: true}}\r\n    //             }\r\n\r\n\r\n    // const [exportState, dispatch] = useReducer(reducer, {template: \"\", code: appData.code, state: {isDone: false, isLoading: false, isSelected: false}})\r\n\r\n    //dispatch({type: 'selected', payload: {name: item?.name, target: e.target}})}\r\n\r\n\r\n    // console.log(\"#####   Component Filter > \", content.filter);\r\n\r\n    function handleFiltering(e) {\r\n\r\n        if(e.target.classList.contains(\"selected\")) {\r\n            console.log(\"Disabling filter..\");\r\n            dispatch({type: ACTIONS.REMOVE_FILTER, payload: {tag: e.target.value}});\r\n            return\r\n        } else {\r\n            console.log(\"Adding new filter\")\r\n            dispatch({type: ACTIONS.ADD_FILTER, payload: {tag: e.target.value}})\r\n            return\r\n        };\r\n    }\r\n    \r\n    return  <React.Fragment>\r\n                <Layout >\r\n                    <React.Fragment>\r\n                    <div className=\"flex flex-column mb-6 flex flex-col\">\r\n                        <div className=\"px-64\">\r\n                            <p>Nay whatever way delicate passed of avoid might sing whatever all window concealed. Dissuade whole many age mistress late sentiments held doubt scarcely against invitation answer enable. Visited engage steepest shall beyond subject civilly performed concluded offence farther.</p>\r\n                            <div className=\"tags-filter flex flex-row mt-6\">\r\n                                <button className=\"tag px-2 py-1 border mr-2\" onClick={ () => dispatch({type: ACTIONS.TEST})} >TEST</button>\r\n                                {/* <p>Filters</p> */}\r\n                                {/* <button className=\"tag px-2 py-1 border mr-2\" onClick={sortSnippets} value={filter[prop]}> */}\r\n                                {\r\n                                    content.filter && content.filter.map( (filter, index) => <button className={`tag px-2 py-1 border mr-2 ${filter.isSelected ? 'selected' : ''}`}\r\n                                        disabled={!filter.isActive} key={index} onClick={handleFiltering} value={filter.tag} >\r\n                                            {filter.tag}\r\n                                        </button>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pt-8 flex flex-row flex-wrap items-stretch\">\r\n                            {/* <p>Snippet</p><p>Snippet</p><p>Snippet</p> */}\r\n                            {content.snippets && content.snippets.map( (snippet, index) => \r\n\r\n                            //if filter length > 0\r\n                            \r\n                            \r\n                            <div key={index} className=\"p-2 flex-shring-0 w-1/4 flex\" >\r\n                                <div className=\"bg-gray-200 p-3\">\r\n                                    <h2 className=\"pb-2 text-lg leading-5\"><a href={`snippets/${snippet.slug}`}>{snippet.title}</a></h2>\r\n                                    <p className=\"text-sm leading-4\">{snippet.excerpt}</p>\r\n                                    <span className=\"snippet-tags flex flex-row pt-2 flex-wrap\">\r\n                                        {snippet.tags.map((tag, index) => <p key={index} className=\"snippet-tag text-sm flex-shrink-0\">{tag}</p>)}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    </React.Fragment>\r\n                </Layout>\r\n            </React.Fragment>\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}