{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\posts\\\\[slug].js\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { useRouter } from 'next/router';\nimport client from '../../client';\nimport BlockContent from '@sanity/block-content-to-react';\nimport imageUrlBuilder from '@sanity/image-url';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nvar Post = function Post(props) {\n  //const router = useRouter()\n  console.log(props);\n  var _props$title = props.title,\n      title = _props$title === void 0 ? \"\" : _props$title,\n      _props$body = props.body,\n      body = _props$body === void 0 ? [] : _props$body,\n      _props$slug = props.slug,\n      slug = _props$slug === void 0 ? {} : _props$slug,\n      _props$url = props.url,\n      url = _props$url === void 0 ? {} : _props$url,\n      _props$mainImage = props.mainImage,\n      mainImage = _props$mainImage === void 0 ? {} : _props$mainImage;\n  console.log(\"Destructuring: title\", title, \"body \", body, \"slug \", slug, \"main image \", mainImage);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [mainImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: urlFor(mainImage).width(50).url()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BlockContent, _objectSpread({\n      blocks: body,\n      imageOptions: {\n        w: 320,\n        h: 240,\n        fit: 'max'\n      }\n    }, client.config()), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, _this);\n}; // ===============================\n\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$slug, slug;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"Context\", context); // It's important to default the slug so that it doesn't return \"undefined\"\n\n            _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n            _context.next = 4;\n            return client.fetch(\"\\n    *[_type == \\\"post\\\" && slug.current == $slug][0]\\n  \", {\n              slug: slug\n            });\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/posts/[slug].js"],"names":["client","BlockContent","imageUrlBuilder","urlFor","source","image","Post","props","console","log","title","body","slug","url","mainImage","width","w","h","fit","config","getInitialProps","context","query","fetch"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOF,eAAe,CAACF,MAAD,CAAf,CAAwBK,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,IAAME,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAFsB,qBAG+CA,KAH/C,CAGfG,KAHe;AAAA,MAGfA,KAHe,6BAGP,EAHO;AAAA,oBAG+CH,KAH/C,CAGHI,IAHG;AAAA,MAGHA,IAHG,4BAGI,EAHJ;AAAA,oBAG+CJ,KAH/C,CAGQK,IAHR;AAAA,MAGQA,IAHR,4BAGe,EAHf;AAAA,mBAG+CL,KAH/C,CAGmBM,GAHnB;AAAA,MAGmBA,GAHnB,2BAGyB,EAHzB;AAAA,yBAG+CN,KAH/C,CAG6BO,SAH7B;AAAA,MAG6BA,SAH7B,iCAGyC,EAHzC;AAItBN,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCC,KAApC,EAA2C,OAA3C,EAAoDC,IAApD,EAA0D,OAA1D,EAAmEC,IAAnE,EAAyE,aAAzE,EAAwFE,SAAxF;AACA,sBACE;AAAA,eACGA,SAAS,iBACR;AAAA,6BACE;AACE,QAAA,GAAG,EAAEX,MAAM,CAACW,SAAD,CAAN,CACFC,KADE,CACI,EADJ,EAEFF,GAFE;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aAFJ,eAUE;AAAA,gBAAKN,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,aAVF,eAWE,QAAC,YAAD;AACE,MAAA,MAAM,EAAEC,IADV;AAEE,MAAA,YAAY,EAAE;AAAEK,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE,GAAb;AAAkBC,QAAAA,GAAG,EAAE;AAAvB;AAFhB,OAGMlB,MAAM,CAACmB,MAAP,EAHN;AAAA;AAAA;AAAA;AAAA,aAXF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAmBD,CAxBD,C,CA0BA;;;KA1BMb,I;;AA4BNA,IAAI,CAACc,eAAL;AAAA,sEAAuB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrBb,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBY,OAAvB,EADqB,CAErB;;AAFqB,kCAGCA,OAAO,CAACC,KAHT,CAGbV,IAHa,EAGbA,IAHa,oCAGN,EAHM;AAAA;AAAA,mBAIRZ,MAAM,CAACuB,KAAP,+DAEV;AAAEX,cAAAA,IAAI,EAAJA;AAAF,aAFU,CAJQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AASA,eAAeN,IAAf","sourcesContent":["// import { useRouter } from 'next/router';\r\nimport client from '../../client';\r\nimport BlockContent from '@sanity/block-content-to-react';\r\nimport imageUrlBuilder from '@sanity/image-url';\r\n\r\nfunction urlFor (source) {\r\n  return imageUrlBuilder(client).image(source)\r\n}\r\n\r\nconst Post = (props) => {\r\n  //const router = useRouter()\r\n  console.log(props);\r\n  const {title = \"\", body = [], slug = {}, url = {}, mainImage = {}} = props;\r\n  console.log(\"Destructuring: title\", title, \"body \", body, \"slug \", slug, \"main image \", mainImage);\r\n  return (\r\n    <article>\r\n      {mainImage && (\r\n        <div>\r\n          <img\r\n            src={urlFor(mainImage)\r\n              .width(50)\r\n              .url()}\r\n          />\r\n        </div>\r\n      )}\r\n      <h1>{props.title}</h1>\r\n      <BlockContent\r\n        blocks={body}\r\n        imageOptions={{ w: 320, h: 240, fit: 'max' }}\r\n        {...client.config()}\r\n      />\r\n    </article>\r\n  )\r\n}\r\n\r\n// ===============================\r\n\r\nPost.getInitialProps = async function(context) {\r\n  console.log(\"Context\", context);\r\n  // It's important to default the slug so that it doesn't return \"undefined\"\r\n  const { slug = \"\" } = context.query\r\n  return await client.fetch(`\r\n    *[_type == \"post\" && slug.current == $slug][0]\r\n  `, { slug })\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}