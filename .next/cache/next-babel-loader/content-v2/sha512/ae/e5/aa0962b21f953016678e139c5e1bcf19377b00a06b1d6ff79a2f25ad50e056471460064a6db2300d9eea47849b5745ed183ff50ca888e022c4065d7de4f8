{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\posts\\\\[slug].js\";\nimport { useRouter } from 'next/router'; //import client from '../../client';\n\nconst Post = props => {\n  const router = useRouter();\n  console.log(\"SLUG > \", router.query.slug);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"TEXT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this); // const {title = \"\", body = [], slug = {}, url = {}, mainImage = {}} = props;\n  // console.log(\"Destructuring: title\", title, \"body \", body, \"slug \", slug, \"main image \", mainImage);\n  // return (\n  //   <article>\n  //     {mainImage && (\n  //       <div>\n  //         <img\n  //           src={urlFor(mainImage)\n  //             .width(600).url()\n  //             }\n  //         />\n  //       </div>\n  //     )}\n  //     <h1>{props.title}</h1>\n  //     <BlockContent\n  //       blocks={body}\n  //       imageOptions={{ w: 320, h: 240, fit: 'max' }}\n  //       {...client.config()}\n  //     />\n  //   </article>\n  // )\n}; // ===============================\n// Post.getInitialProps = async function(context) {\n//   console.log(\"Context\", context);\n//   // It's important to default the slug so that it doesn't return \"undefined\"\n//   const { slug = \"\" } = context.query\n//   return await client.fetch(`\n//     *[_type == \"post\" && slug.current == $slug][0]\n//   `, { slug })\n// }\n// This function gets called at build time\n// export async function getStaticProps(context) {\n//   console.log(\"CONTEXT FOR POST > \", context);\n//   // const client = new ApolloClient({\n//   //     uri: process.env.REACT_APP_GRAPH_API,\n//   //     cache: new InMemoryCache()\n//   // });\n//   // //destructure response to data obj\n//   // const { data } = await client.query({\n//   //     query: gql`{ \n//   //       posts(where: {id: \"ckadrfuu000pe0148kels2b5e\"}) {\n//   //         id\n//   //         title\n//   //       }\n//   //     }`\n//   // });\n//   //check what we got from API in console (server-side render fetching)\n//   //response would be - posts []\n//   //console.log(\"QUERY DATA, \", data); \n//   //return props to main component as an object {posts: response.posts}\n//   // return { props: {posts: data.posts} }\n//   return {}\n// }\n// export async function getStaticPaths() {\n//   return {\n//     paths: [\n//       { params: { ... } } // See the \"paths\" section below\n//     ],\n//     fallback: true or false // See the \"fallback\" section below\n//   };\n// }\n\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/posts/[slug].js"],"names":["useRouter","Post","props","router","console","log","query","slug"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B,C,CACA;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAM,CAACG,KAAP,CAAaC,IAApC;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAJsB,CAMtB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CA5BD,C,CA8BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeN,IAAf","sourcesContent":["import { useRouter } from 'next/router';\r\n//import client from '../../client';\r\n\r\nconst Post = (props) => {\r\n  const router = useRouter()\r\n  console.log(\"SLUG > \", router.query.slug);\r\n\r\n  return <p>TEXT</p>\r\n\r\n  // const {title = \"\", body = [], slug = {}, url = {}, mainImage = {}} = props;\r\n  // console.log(\"Destructuring: title\", title, \"body \", body, \"slug \", slug, \"main image \", mainImage);\r\n\r\n  // return (\r\n  //   <article>\r\n  //     {mainImage && (\r\n  //       <div>\r\n  //         <img\r\n  //           src={urlFor(mainImage)\r\n  //             .width(600).url()\r\n  //             }\r\n  //         />\r\n  //       </div>\r\n  //     )}\r\n  //     <h1>{props.title}</h1>\r\n  //     <BlockContent\r\n  //       blocks={body}\r\n  //       imageOptions={{ w: 320, h: 240, fit: 'max' }}\r\n  //       {...client.config()}\r\n  //     />\r\n  //   </article>\r\n  // )\r\n}\r\n\r\n// ===============================\r\n\r\n// Post.getInitialProps = async function(context) {\r\n//   console.log(\"Context\", context);\r\n//   // It's important to default the slug so that it doesn't return \"undefined\"\r\n//   const { slug = \"\" } = context.query\r\n//   return await client.fetch(`\r\n//     *[_type == \"post\" && slug.current == $slug][0]\r\n//   `, { slug })\r\n// }\r\n\r\n\r\n// This function gets called at build time\r\n// export async function getStaticProps(context) {\r\n\r\n//   console.log(\"CONTEXT FOR POST > \", context);\r\n\r\n//   // const client = new ApolloClient({\r\n//   //     uri: process.env.REACT_APP_GRAPH_API,\r\n//   //     cache: new InMemoryCache()\r\n//   // });\r\n\r\n//   // //destructure response to data obj\r\n//   // const { data } = await client.query({\r\n//   //     query: gql`{ \r\n//   //       posts(where: {id: \"ckadrfuu000pe0148kels2b5e\"}) {\r\n//   //         id\r\n//   //         title\r\n//   //       }\r\n//   //     }`\r\n//   // });\r\n\r\n//   //check what we got from API in console (server-side render fetching)\r\n//   //response would be - posts []\r\n//   //console.log(\"QUERY DATA, \", data); \r\n  \r\n//   //return props to main component as an object {posts: response.posts}\r\n//   // return { props: {posts: data.posts} }\r\n//   return {}\r\n// }\r\n\r\n// export async function getStaticPaths() {\r\n//   return {\r\n//     paths: [\r\n//       { params: { ... } } // See the \"paths\" section below\r\n//     ],\r\n//     fallback: true or false // See the \"fallback\" section below\r\n//   };\r\n// }\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}