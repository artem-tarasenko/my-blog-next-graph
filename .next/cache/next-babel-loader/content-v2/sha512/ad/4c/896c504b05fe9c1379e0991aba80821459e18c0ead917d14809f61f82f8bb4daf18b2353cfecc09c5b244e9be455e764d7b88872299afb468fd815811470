{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\posts\\\\index.js\";\nimport React from \"react\"; //import '../styles/globals.css';\n\nimport Blog from \"../../components/Blog.jsx\";\nimport Layout from '../../components/Layout.jsx'; // import { request, GraphQLClient, gql  } from 'graphql-request';\n\n// ###############################################################\n// ###############################################################\nfunction Index(props) {\n  //get props from getStaticProps and destructure it to new object\n  //recieveing posts prop = [\"array from response\"], and default empty []\n  var _props$posts = props.posts,\n      posts = _props$posts === void 0 ? [] : _props$posts; //console.log(\"INITIAL POSTS DATA > \", posts);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: posts.length > 1 ? /*#__PURE__*/_jsxDEV(Blog, {\n        source: posts,\n        test: \"testing string\",\n        category: \"posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 110\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n}\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/posts/index.js"],"names":["React","Blog","Layout","Index","props","posts","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB,C,CACA;;AAuCA;AACA;AACA,SAASC,KAAT,CAAgBC,KAAhB,EAAwB;AACpB;AACA;AAFoB,qBAGGA,KAHH,CAGZC,KAHY;AAAA,MAGZA,KAHY,6BAGJ,EAHI,iBAIpB;;AAEA,sBAAQ,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI,QAAC,MAAD;AAAA,gBACKA,KAAK,CAACC,MAAN,GAAe,CAAf,gBAAmB,QAAC,IAAD;AAAM,QAAA,MAAM,EAAED,KAAd;AAAqB,QAAA,IAAI,EAAE,gBAA3B;AAA6C,QAAA,QAAQ,EAAE;AAAvD;AAAA;AAAA;AAAA;AAAA,cAAnB,gBAAwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD7F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAAR;AAKH;;KAXQF,K;;AAaT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\n//import '../styles/globals.css';\r\n\r\nimport Blog from \"../../components/Blog.jsx\";\r\nimport Layout from '../../components/Layout.jsx';\r\n// import { request, GraphQLClient, gql  } from 'graphql-request';\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\n\r\n\r\n\r\n// ###############################################################\r\n// ###############################################################\r\nconst client = new ApolloClient({\r\n    uri: process.env.REACT_APP_GRAPH_API,\r\n    cache: new InMemoryCache()\r\n});\r\n\r\n// ###############################################################\r\n// ###############################################################\r\n// This function gets called at build time\r\nexport async function getStaticProps() {\r\n    //destructure response to data obj\r\n    const { data: {posts} } = await client.query({\r\n        query: gql`{ \r\n            posts {\r\n                slug\r\n                title\r\n                date\r\n                createdAt\r\n                excerpt\r\n                tags\r\n                coverImage {\r\n                  url\r\n                }\r\n              } \r\n        }`\r\n    });\r\n\r\n    return { props: {posts} };\r\n  }\r\n\r\n\r\n\r\n\r\n// ###############################################################\r\n// ###############################################################\r\nfunction Index( props ) {\r\n    //get props from getStaticProps and destructure it to new object\r\n    //recieveing posts prop = [\"array from response\"], and default empty []\r\n    const { posts = [] } = props;\r\n    //console.log(\"INITIAL POSTS DATA > \", posts);\r\n    \r\n    return  <React.Fragment>\r\n                <Layout >\r\n                    {posts.length > 1 ? <Blog source={posts} test={\"testing string\"} category={\"posts\"} /> : <p>Loading...</p>}\r\n                </Layout>\r\n            </React.Fragment>\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}