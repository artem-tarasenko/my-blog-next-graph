{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarasenko_ag\\\\Desktop\\\\blog\\\\MyBlog\\\\frontNextJs\\\\pages\\\\snippets\\\\[slug].js\";\nimport React from \"react\";\nimport BlogPost from \"../../components/BlogPost.jsx\";\nimport Snippets from \"../../components/Snippets.jsx\"; // #########################################################################################\n// #########################################################################################\n\n// #########################################################################################\n// #########################################################################################\nfunction Post(_ref) {\n  var snippet = _ref.snippet;\n  return /*#__PURE__*/_jsxDEV(Snippets, {\n    post: snippet\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 11\n  }, this);\n}\n\n_c = Post;\nexport var __N_SSG = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/tarasenko_ag/Desktop/blog/MyBlog/frontNextJs/pages/snippets/[slug].js"],"names":["React","BlogPost","Snippets","Post","snippet"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,+BAArB,C,CAGA;AACA;;AAqDA;AACA;AACA,SAASC,IAAT,OAA2B;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACzB,sBAAQ,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAR;AACD;;KAFQD,I;;AAIT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport { ApolloClient, InMemoryCache, gql } from '@apollo/client';\r\nimport BlogPost from \"../../components/BlogPost.jsx\";\r\nimport Snippets from \"../../components/Snippets.jsx\";\r\n\r\n\r\n// #########################################################################################\r\n// #########################################################################################\r\nconst client = new ApolloClient({\r\n  uri: process.env.REACT_APP_GRAPH_API,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\n\r\n// #########################################################################################\r\n// #########################################################################################\r\n// This function gets called at build time\r\nexport async function getStaticPaths() {\r\n    const { data: {snippets} } = await client.query(\r\n      {query: gql`{snippets { slug } }`}\r\n    );\r\n  \r\n    const paths = snippets.map(item => ({params: {slug: item.slug}}));\r\n    return { paths, fallback: false }\r\n  }\r\n\r\n// #########################################################################################\r\n// #########################################################################################\r\nexport async function getStaticProps( {params} ) {\r\n  //destructure response to data obj, response data from apollo will be in data prop.\r\n  //so destructuring should be for 2 layers\r\n  //GraphQL query format - ( { query: *query*, variables: {} } ). Response will be if a form of - {data: {posts: [{post}, {post}]}}\r\n  //but with only 1 item in the array - {data: {posts: [{post}]}}, so to get the final object 3 layers must be destructured..\r\n  const graphQuery = gql`\r\n    query GetSinglePostQuery($slug: String) { \r\n        snippets(where: {slug: $slug}) {\r\n            title\r\n            slug\r\n            tags\r\n            content{\r\n              html\r\n            }\r\n            repo\r\n            example\r\n      }\r\n    } \r\n  `;\r\n \r\n  const { data: { snippets: [snippet] } } = await client.query(\r\n    {query: graphQuery, variables: {slug: params.slug}}\r\n  );\r\n\r\n  return { props: {snippet} }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// #########################################################################################\r\n// #########################################################################################\r\nfunction Post( {snippet} ) {\r\n  return  <Snippets post={snippet} />\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}